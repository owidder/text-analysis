Speed up the micro edit	"The microedit with large data is not as fast as desired.

Measurements are given in IPTT-126



For now timebox of 3 days"		Improvement	iteraplan Thunderduck	20/Sep/16 9:48 AM	28/Sep/16 1:40 PM														"23/Sep/16 11:20 AM;mse;Performance analysis  (with Stephan's EON data) before any action was taken:



*POST*:

http://localhost:8080/iteraplan/api/element/InformationSystem

Request body:



{code:xml}

{

""name"" : [""InformationSystem12""],

""typeOfStatus"" : [""CURRENT""],

""description"" : [""test""],

""projects"": [{""id"": ""15189""},{""id"": ""14695""}],

""informationSystemDomains"": [{""id"": ""52""},{""id"": ""19127""}]

}

{code}



Total request time (from Postman): 3015ms

* 52.2% notifyPlugins()

** 31.8% ModelImpl.clone()

** 20.4% BeforeCompletionModelChangeAction.updateModelWithElasticUpdatePreview()

* 18.3% IteraplanModelImporterImpl.saveSingleCreate()

* 21.9% Authentification:

-> de.iteratec.springframework.security.UserInitializingBasicAuthenticationFilter.onSuccessfulAuthentication

-> de.iteratec.iteraplan.businesslogic.service.ElasticMiContextAndStakeholderManagerInitializationServiceImpl.initializeStakeholderManager





*PUT*

http://localhost:8080/iteraplan/api/element/InformationSystem/4825

Request body:



{code:xml}

{

""description"" : [""changed description""],

""projects"": [{""id"": ""15189""},{""id"": ""14695""}]

}

{code}



Total request time (from Postman): 3854ms

* 83.4% MicroEditManager.performPut

** 47.9% notifyPlugins() 

*** 27.4% ModelImpl.clone

*** 20.5% BeforeCompletionModelChangeAction.updateModelWithElasticUpdatePreview

** 13.4% IteraplanModelImporterImpl.saveSingleUpdate

** 7.1% TransactionJournal.runUpdates

* 15.2% Authentification:

-> de.iteratec.springframework.security.UserInitializingBasicAuthenticationFilter.onSuccessfulAuthentication

-> de.iteratec.iteraplan.businesslogic.service.ElasticMiContextAndStakeholderManagerInitializationServiceImpl.initializeStakeholderManager





*DELETE*

http://localhost:8080/iteraplan/api/element/InformationSystem/58257



Total request time (from Postman): 4460 ms

* 37.5% notifyPlugins()

** 21.8% ModelImpl.clone

** 15.7% BeforeCompletionModelChangeAction.updateModelWithElasticUpdatePreview

* 32.3% IteraplanModelImporterImpl.saveSingleDelete

* 23.9% Authentification:

-> de.iteratec.springframework.security.UserInitializingBasicAuthenticationFilter.onSuccessfulAuthentication

-> de.iteratec.iteraplan.businesslogic.service.ElasticMiContextAndStakeholderManagerInitializationServiceImpl.initializeStakeholderManager





*Result:*

* In the model.clone() function, the time is lost in several small steps and these were already optimized (accroding to Staphan) -> So no possibilty to optimize the clone method itself -> Maybe get rid of clone for plugins with a model wrapper.

* inititalizeStakeholderManager() needs 25-30% of the request time with basic authentification

* IteraplanModelImporterImpl.getReloadedMapping() needs 15-30% of the request time

* When a lot of relationships and/or attributes are changed, the ElasticUpdate in the AfterCompletionModelChangeAction takes a lot of time"	"23/Sep/16 11:39 AM;mse;Two actions:



* Step 1: Create clone only when there are plugins registered for the according building block type - easy, implemented in this ticket

* Step 2: Use model wrapper instead of clone - takes more time, see ticket IPTT-158

* Step 3: Update elastic only for real changes (will be followed up in ticket IPTT-130)

* Step 4: getReloadedMapping() reloads only attributes which are relevant for the current change - relatively easy - implemented in this ticket



Not much we can do (after discussion with Stephan):

* Time which gets lost in the initilazeStakeholderManager() method. "																																																					
