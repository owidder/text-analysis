Notifications in Import	"As described in ITERAPLAN-4222, notifications don't work for building blocks created or changed during an import.



The suggested solution in that ticket does not work, since it is not possible to calculate actual changes of building blocks where the pointcut needs to be set for the import to trigger notifications.

Possible alternate solution, needs to be discussed:

* Implementation of a EmailModelBuilder based on the elastic diff object used during the Import.

* Using that EmailModelBuilder to write notifications without AOP

* Difficulties: Elastic doesn't know about subscribed users. These would have to be determined extra, for example during the reloading of building blocks in MiIteraplanDiffWriter



Other possible alternative with reduced functionality:

Aggregated Email-Notifications from Imports. Just a list of names of changed elements or the like."		Improvement	iteraplan Thunderduck	05/Jul/16 12:47 PM	30/May/17 4:45 PM					import	notification								"14/Sep/16 12:15 PM;fka;After discussion with [[~sfe]: Should be done with/after the currently ongoing reimplementation of history and event listeners.



No special solution (like aggregation of messages) needed.

"	"29/Mar/17 4:22 PM;ach;modify iteraplan.properties to send notification email from your mailaccount to your mailbox



{code:java}

notification.activated=true

notification.email.from=youremail@iteratec.de	

notification.smtpserver=smtp.system-hoster.com

notification.port=25

notification.ssl.enable=false

notification.starttls.enable=true

notification.username=youremail@iteratec.de

notification.password=yourpassword

{code}







new Service ""m3celNotificationSender"" called from AfterCompletionModelChangeAction with generateAndSendEmails() takes all merged changes (modelChange object), generates appropriate Email models, parses it to email and send it to relevant users



*still toDo:*

- may be more comments

- tests for m3celNotificationSender

- filter permissions (see 1)

- translations (see 2))

- AOP remove (see 3)





1) after emailmodel creating and before send, models should be filtert accoring to user permissions (it is possible, that some attributes are invisible for this user)



{code:java}

Map<User, EmailModel> emailModels = createModels(typePersistentName, bbChange, modelChange, users);

        notificationService.sendEmail(users, key, emailModels);

{code}	



make it like in SubscriptionsAdvise.filterModel();



2) names of types and relationshipends appear not locolized in emails. use message service to translate them (see how it is done in SubscriptionAdvice)



3) remove the old AOP solution. NotificationAdvice and it's usage should be removed. In applicationContext.xml too"	"05/May/17 4:38 PM;tsc;another todo:



Fix the TODO in ModelChangeBuilder.addAssoiciatedSubscribedUsers(BuildingBlock buildingBlock). Check first if left and right end of the building block are null anymore.This could already be fixed with IPTT-469."	18/May/17 4:20 PM;tsc;Subscriptions for deletion of associations needs to be fixed (related to all changes, not only in import) -> ITERAPLAN-5289																																																			
