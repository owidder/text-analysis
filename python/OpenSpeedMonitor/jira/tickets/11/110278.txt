Find inactive systems before a certain date	"Maybe it is a simple question, but how can we query systems that were set to inactive prior to a certain date?

For example, we would like to find inactive systems whose ""until"" date is less than 12/31/2015.

The attached query delivers all inactive systems that were active before 12/31/2015.  We would like to see those systems whose ""until"" date is less than or equal to 12/31/2015.

How do i change the query?

thank you, hannes

"		Technical question	iteraplan Support	01/Feb/17 5:47 PM	08/Feb/17 3:58 PM														"01/Feb/17 5:47 PM;hannes.callisen@boehringer-ingelheim.com;

[^productive until.pdf] _(33 kB)_"	"07/Feb/17 3:17 PM;cst;Hello,

thank you for your inquiry. 

At the moment we cheking your request. 
We will answer you  tomorrow morning.

Greetings,

Christoph Stangl - iteraplan Support "	"08/Feb/17 1:37 PM;cst;Dear Mr. Callison.

Thank you for your patience.

We are happy to you intensively use our product. Just for your explanation: The filter for productive period works with “overlapping”, i.e. it checks if the period you want to filter for overlaps at least for one day with the actual period in the data. I’d like to give you an example:

Your Information System is productive from 01st Jan 2017 to 31st Dec 2017 and you filter for productive period from 01st Jan 1900 to 02nd Jan 2017. Then this Information System will be in your result set. For me this looks like you cannot use direct filters from the User Interface for your use case.

I’d suggest to try to use iteraQl which is more powerful than the “normal” filters. But even with this powerful query language it might not work to get the needed information. Unfortunately, this is beyond my competency as technical support. I’d suggest to contact your iteraplan consultant Harald Meyer, if you need some more functional support.

Kind regards from Munich,

Christoph Stangl – iteraplan Support "	"08/Feb/17 3:26 PM;hannes.callisen@boehringer-ingelheim.com;Hello Mr. Stangl - yes, I'm familiar how the overlapping algorithm works.  As you noted, our need is slightly different.  We'll try the iteraQL, however, this is not a solution that a causal user of iteraplan can profit from.
Thank you and you may close this call.
:-) hannes
"																																																			
