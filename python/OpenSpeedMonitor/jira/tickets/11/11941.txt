Schlechte Performance Result-Dashboard	Der Aufruf von Graphen mit aggregierter Zeit ist zu langsam.		Bug	OpenSpeedMonitor	20/Feb/14 11:28 AM	18/Jan/17 3:59 PM														"20/Feb/14 3:29 PM;nkuhn;In de.iteratec.isr.EventResultDashboardService.calculateResultMapForAggregatedData(List<AggregatorType>, Collection<EventResult>, Integer) wurde beim Iterieren über die Map der zu aggregierenden EventResults für jeden Map-Entry der AggregatorType aus der db geladen. 

Lokal dauerte jeder Aufruf von AggregtaorType.findByName() ca. 1,7 Sek. 

* Optimierungsansatz 1: 
Einsatz des Hibernate second-level-Cachings:
{code}
cache.use_query_cache = true
{code}
In der DataSource.groovy und 
{code}
static mapping = {
   cache usage: 'read-only'
}
{code}
in de.iteratec.ism.chart.AggregatorType 
-> Effekt: Jede Abfrage dauert statt 1,7 nur noch 0,03 Sek.
* Optimierungsansatz 2:
Mittels de.iteratec.chart.AggregatorTypeDaoService.getNameToObjectMap() einmalig alle AggregatorTypes holen und dann nur noch hier Nachschlagen. 
-> Effekt: Das Nachschlagen dauert weniger als eine Tausendstel Sekunde. Das initiale Holen aller AggregatorTypes als Lookup-Map dauert 0,05 Sek. Bereits bei zwei Einträgen in der Map ist damit Optimierungsansatz 2 schneller.

Optimierungsansatz 2 wurde realisiert."	03/Jun/14 9:53 AM;nkuhn;Das aufrufen des Result-Dashboards mit zeitlich aggregierten Daten ist immer noch zu langsam. Da sollten wir den Code nochmal auf Performance-Optimierung hin untersuchen. Ich meine, mir war da bereits Optimierungs-Potenzial aufgefallen.																																																					
