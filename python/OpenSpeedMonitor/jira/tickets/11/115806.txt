Reactions unter 5.5	Ich komme bei der Bearbeitung der "Reactions" nicht weiter. Ich hänge am Zugriff auf das Objekt "ModelChange" und "BuildingBlockChange". Haben Sie da Beispiele ? 		Technical question	iteraplan Support	22/Mar/17 9:22 AM	22/Mar/17 1:14 PM														"22/Mar/17 9:35 AM;cst;Guten Morgen Herr Zerrer,

vielen Dank für Ihre Anfrage.

Unter dieser Seite finden Sie einige Beispiele zu den ""Reactions"" und die allgeimene Beschreibung:

[https://doc.iteraplan.de/display/iteraplan55/Plugin+API]

Weitere Script-Beispiele liegen uns hier nicht vor.

Viele Grüße,

Christoph Stangl - iteraplan Support 

 "	"22/Mar/17 9:47 AM;wolfgang.zerrer@festo.com;Danke für Ihre schnelle Antwort.
Die Beispiele aus dem Manual habe ich bereits benutzt um mich ein bischen in Reactions einzulesen. Mir fehlt nur die Info wie ich an die Informationen zu ModelChange und BuildinBlockCahnge komme. (fucntion ? api call ? ...? )
ich will eigenlich nicht nur wisssen an welches Object geändert wurde, sondern prüfen welche Änderung (Merkmal oder Relation) durchgeführt wurde."	"22/Mar/17 12:51 PM;cst;Hallo Herr Zerrer,

vielen Dank für Ihre Antwort.

Wir supporten normalerweise keine Anfragen wie Scripte aufgesetzt werden, dennoch hat einer unserer Entwickler für Sie kurz ein Beispiel erstellt. 

Beispiel: Es wurde ein Projekt mit der ID „42“ und dem Namen „Altes Projekt“ geändert:
 * Neuer Name „Neues Projekt“, und ein Wert für „Kosten“ von 1000 wurde gesetzt.
 * Folgendes Plugin gibt die Änderungen, die am Projekt geschehen sind, in die Konsole aus.

 'use strict';

 api.subscribeFor('Project', onBuildingBlockChange);

 function onBuildingBlockChange(buildingblocktype, event) \{

      // “event” enthält eine Liste aller Änderungen an Projekten, mit einem Eintrag pro Projekt

 

      var projectChanges = event[0]; // Eintrag für das erste geänderte Projekt

      print(projectChanges.id); // -> “42”

      print(projectChanges.changeType); // -> “UPDATE”

 

      var attributeChanges = projectChanges.buildingBlockChanges; // hiervon gibt es zwei

      for (var changeIndex = 0; changeIndex < attributeChanges.length; changeIndex++) \{

            var change = attributeChanges[changeIndex];

 

            print(change.persistentName); // -> “name” im ersten Durchlauf und “Kosten” im zweiten

            print(change.removed); // “Altes Projekt” im ersten Durchlauf und “null” im zweiten

            print(change.added); // “Neues Projekt” im ersten Durchlauf und “1000” im zweiten

      }

}

 Die komplette Ausgabe im Log wäre also wie folgt:
 * 42
 * UPDATE
 * name
 * Altes Projekt
 * Neues Projekt
 * Kosten
 * null
 * 1000

Bitte beachten Sie das dies eine Ausnahme ist und normalerweise nicht von unserem Support abgedeckt wird. Wir hoffen das wir Ihnen damit weiterhelfen konnten. 

Viele Grüße,

Christoph Stangl - iteraplan Support  "	"22/Mar/17 1:11 PM;wolfgang.zerrer@festo.com;super, das hilft mir weiter.
Vielen Dank"																																																			
