Extend REST-API /data for interactive mode for POST (Server)	"*Summary:*

Extend REST-API {{api/data}} for interactive mode for POST



*Details:*

* without any additional query parameter the rest-resource {{api/data}} is unchanged (published API !)

* * with additional query parameter {{?interactive=true}} the new interactive mode is activated

* {color:red}UPDATE: {color} Use query parameter {{mode}} for import strategy: {{ADDITIVE - ""excel.import.strategy.additive"", UPDATE - ""excel.import.strategy.update"", CUD - ""excel.import.strategy.cud""}}

* {color:red}UPDATE: {color} Use query parameter {{skipMetamodelSteps=true}} to determine that metamodel changes are not incorporated

* {color:red}UPDATE: {color} Use header-field content-type to differ between json ({{application/json}}) and excel ({{application/vnd.ms-excel}}) {color:red}*UPDATE*:{color} and xmi ({{application/xmi+xml}})

* {color:red}UPDATE: {color} importStage - FILE_CHECK, METAMODEL_COMPARE, METAMODEL_MERGE, MODEL_COMPARE, MODEL_WRITE

* {color:red}UPDATE: {color} importStatus - ACTIVE, WAITING, XX % (progress for stage 5), CANCELED, DONE (for stage 5), AVAILABLE, ERROR. 

* {color:red}UPDATE: {color} importProcessInfo was added to JSON response - it contains current status for each import stage after import process is started. Possible values are - ""not started"", ""active"", ""done"", ""skipped"" (last one is actual only for metamodel stages).



*Sequence:*

* the interactive mode basically simulates the behaviour of the import process of the classic client, i.e.

** Only one import in iteraplan is possible (blocking for all other imports)



** User send with *initial POST-request the file attached* in the interactive mode

** Server returns https status code 202 with the json:

*** {code:java}

{ 

	""user"": STRING,

	""importStrategy"": STRING,

        ""skipMetamodelSteps"": BOOLEAN,

	""exportedTimestamp"": DATETIME,

	""importStage"": STRING, (""1- Read file"", ""2- Determine mm changes"", ""3- Write mm"", ""4- Validate data"" OR ""5- Write data"")

	""importStatus"": ""XX %"" (only active in stage 5) OR ""active"" OR ""waiting for client request"" OR ""skipped"",

        ""messages"": {},

        ""importProcessInfo"": {

          ""MODEL_WRITE"": ""not started"",

          ""MODEL_COMPARE"": ""not started"",

          ""METAMODEL_MERGE"": ""skipped"",

          ""METAMODEL_COMPARE"": ""skipped"",

          ""FILE_CHECK"": ""done""

         }

}

{code}

** Server returns for all GETs the https status code 202 with the above json, until one stage is done

** When one of the stages 1-4 is finished, please return 202 with body

*** {code:java}

{ 

	""user"": STRING,

	""importStrategy"": STRING,

        ""skipMetamodelSteps"": BOOLEAN,

	""exportedTimestamp"": DATETIME,

	""importStage"": STRING, (""1- Read file"", ""2- Determine mm changes"", ""3- Write mm"", ""4- Validate data"" OR ""5- Write data"")

	""importStatus"": ""waiting for client request"",

        ""messages"": {

          ""ERROR"":[STRING, STRING, ... ],

          ""INFO"":[STRING, STRING, ... ],

          ""WARNING"":[STRING, STRING, ... ]

          }

        ""importProcessInfo"": {

          ""MODEL_WRITE"": ""not started"",

          ""MODEL_COMPARE"": ""not started"",

          ""METAMODEL_MERGE"": ""skipped"",

          ""METAMODEL_COMPARE"": ""skipped"",

          ""FILE_CHECK"": ""done""

         }

}

{code}



** Client sends *another POST-request* with body:

*** {code:java}

{ 

	""importAction"": ""NEXT-STAGE"" OR ""CANCEL"",

        ""nextStage"": STRING (see importStage, MODEL_WRITE_CONFIRMATION for ending last stage)

}

{code}

** Server returns again https status code 202 with the json (see above):

*** {code:java}

{ 

	""user"": STRING,

	""importStrategy"": STRING,

        ""skipMetamodelSteps"": BOOLEAN,

	""exportedTimestamp"": DATETIME,

	""importStage"": STRING, (""1- Read file"", ""2- Determine mm changes"", ""3- Write mm"", ""4- Validate data"" OR ""5- Write data"")

	""importStatus"": ""XX %"" (only active in stage 5) OR ""active"" OR ""waiting for client request"",

         ""messages"": {

          ""ERROR"":[STRING, STRING, ... ],

          ""INFO"":[STRING, STRING, ... ],

          ""WARNING"":[STRING, STRING, ... ]

          }

        ""importProcessInfo"": {

          ""MODEL_WRITE"": ""not started"",

          ""MODEL_COMPARE"": ""not started"",

          ""METAMODEL_MERGE"": ""skipped"",

          ""METAMODEL_COMPARE"": ""skipped"",

          ""FILE_CHECK"": ""done""

         }

}

{code}

** ...



** *After final stage 5* is successfully delivered, server responds to a GET-request with status code 200

*** {code:java}

{ 

	""user"": STRING,

	""importStrategy"": STRING,

        ""skipMetamodelSteps"": BOOLEAN,

	""exportedTimestamp"": DATETIME,

	""importStage"": ""DONE"",

	""importStatus"": ""DONE"",

         ""messages"": {

          ""ERROR"":[STRING, STRING, ... ],

          ""INFO"":[STRING, STRING, ... ],

          ""WARNING"":[STRING, STRING, ... ]

          }

        ""importProcessInfo"": {

          ""MODEL_WRITE"": ""done"",

          ""MODEL_COMPARE"": ""done"",

          ""METAMODEL_MERGE"": ""skipped"",

          ""METAMODEL_COMPARE"": ""skipped"",

          ""FILE_CHECK"": ""done""

         }

}

{code}





{color:red}UPDATE:{color} New requirements after feedback from [~ants]:



h1. Non-success-cases:



h2. Cancel

After a cancel-request from the client return the status code 200 with the body:

{code:java}

{ 

	""user"": STRING,

	""importStrategy"": STRING,

        ""skipMetamodelSteps"": BOOLEAN,

	""exportedTimestamp"": DATETIME,

	""importStage"": ""CANCELED"",

	""importStatus"": ""CANCELED"",

         ""messages"": {

          ""ERROR"":[STRING, STRING, ... ],

          ""INFO"":[STRING, STRING, ... ],

          ""WARNING"":[STRING, STRING, ... ]

          }

}

{code}





h2. 2 subsequent POST-requests

Only 1 POST-request is allowed, afterwards the server is working. The next POST-request is allowed, when one stage is done.

Case: A POST-request during the server is busy with import

Server-Response: Server returns http status code 409 with the json:

{code:java}

{ 

	""user"": STRING,

	""importStrategy"": STRING,

        ""skipMetamodelSteps"": BOOLEAN,

	""exportedTimestamp"": DATETIME,

	""importStage"": STRING, (""1- Read file"", ""2- Determine mm changes"", ""3- Write mm"", ""4- Validate data"" OR ""5- Write data"")

	""importStatus"": ""XX %"" (only active in stage 5) OR ""active"",

         ""messages"": {

          ""ERROR"":[""Server busy"" ],

          ""INFO"":[],

          ""WARNING"":[ ]

          }

}

{code}



h2. Other users send requests

Only 1 user can work at the same time with the import. All other users are blocked.

Case: Any REST-request of another user during the import of a user

Server-Response: Server returns http status code 423 with the json:

{code:java}

{ 

	""user"": STRING,

	""importStrategy"": STRING,

        ""skipMetamodelSteps"": BOOLEAN,

	""exportedTimestamp"": DATETIME,

	""importStage"": STRING, (""1- Read file"", ""2- Determine mm changes"", ""3- Write mm"", ""4- Validate data"" OR ""5- Write data"")

	""importStatus"": ""XX %"" (only active in stage 5) OR ""active"",

        ""messages"": {

          ""ERROR"":[""Server busy"" ],

          ""INFO"":[],

          ""WARNING"":[ ]

          }

}

{code}"		New Feature	iteraplan Speedbird	08/Mar/17 5:08 PM	07/Apr/17 12:53 PM														07/Apr/17 12:53 PM;dmkh;Review is done, please update REST API documentation (https://doc.iteraplan.de/display/iteraplan60/Massdata+API) due to updated functionality with description of URL parameters and interactive mode.																																																						
