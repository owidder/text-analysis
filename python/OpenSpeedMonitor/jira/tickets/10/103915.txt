Formulate Consistency Checks as iteraQL	"For all the ConsistencyChecks from the Calssic Client marked as ""ok"" below in the comment by WFR, provide an iteraQL clause (maybe with a placeholder). Put this clauses in the user docu.



Also include at least two examples how to compare dates: One example how to compare a date attribute with a given fixed date literal, another example how to compare two attributes.



All examples should be put on this user docu page, always with some explanation:

https://www.iteraplan.de/doc/display/iteraplan55/iteraQL+Examples

"		Improvement	iteraplan PO	25/Nov/16 10:39 AM	19/Jan/17 8:04 AM														"25/Nov/16 10:41 AM;wfr;Second Group - Technical Landscape



1 not possible, comparison of dates of different objects

2 

{noformat}

TechnicalComponent[

 @typeOfStatus!=""Current"" & 

 @typeOfStatus!=""Plan"" & 

 @typeOfStatus!=""Inactive"" & 

 @typeOfStatus!=""Target""];

}

{noformat}

3 not possible, release

4 possible with a variable for current date

5 partially possible, because ther is no comparison ""runtime period after today"".

Could be done with ""Live (Start)"", after renaming to ""Live_Start""

6 see above

7 not possible, no binding

8 not possible, no binding

9 

{noformat}

TechnicalComponent[ 

  count(/baseComponents[ @Compliance_to_Guidelines != ""compliant"" ]) > 0 ];

{noformat}

After renaming the attribute

10 not possible, because two sets of edges would have to be compared. English description of this check is clear and requires binding.

 

Third Group - General Landscape

1 For a given BBT and a known list of mandatory attributes, there is a query for this check.

This query must be adapted if the metamodel changes.

For all BBTs, the user must execute several queries of this kind. 



2 See above, same for a single BBT and a known list of attribute and their bounds.



3 See above, same for a single BBT and a variable for the current date.



4 See above, same for a single BBT and its associations. 

"	"25/Nov/16 3:49 PM;wfr;For each consistency check, one of the following holds:

* It can be implemented by an iteraQL query

* It can be implemented in a limited or specialized way, for example BBT by BBT.

* It cannot be implemented because it 

** requires a bound variable in to places in the query.

** requires a comparison with variables (or expressions) on both sides, not only a comparison with a literal value.

** requires the explicit release structure of Information System or Technical Component. "	"25/Nov/16 3:57 PM;wfr;Group 1 - Information System Landscape

1 not possible, reason: ""at the same time""

2 not possible, reason: ""longer than their superordinate releases""

3 not possible, reason: ""longer that starting point""

4 not possible, reason: ""release of""

manual approach: list all Information System (Releases), sort by name (default), look for duplicates that differ only in the release number suffix.

5 query with parameter for current date (""today"")

{noformat}

InformationSystem[@typeOfStatus!=""Current"" & @runtimePeriod.contains(""2010-01-01;2010-01-01"")];

{noformat}

where 2010-01-01 is an example for the current date, written twice as a single-day-period.

6 similar query, no exact solution. 

Query has a parameter for current date (""today""), see above.

{noformat}

InformationSystem[(@typeOfStatus=""Current"" | @typeOfStatus = ""Inactive"" ) 

& ! @runtimePeriod.contains(""2015-01-01;2015-01-01"")];

{noformat}

There is no comparison for ""runtime period ends before 2015-01-01"", neither ""...begins after...""

7 as above

8 

{noformat}

InformationSystem[@typeOfStatus=""Plan"" & count(/projects) = 0];

{noformat}

9 

{noformat}

InformationSystem[@typeOfStatus!=""Plan"" & count(/projects) > 0];

{noformat}

10

{noformat}

InformationSystem [

( @typeOfStatus!=""Current"" 

  & ( 

    count(/informationFlows1/informationSystemRelease2[@typeOfStatus=""Current""]) > 0

    | count(/informationFlows2/informationSystemRelease1[@typeOfStatus=""Current""]) > 0

  )

) 

|

( @typeOfStatus=""Current"" 

  & (

    count(/informationFlows1/informationSystemRelease2[@typeOfStatus!=""Current""]) > 0

    | count(/informationFlows2/informationSystemRelease1[@typeOfStatus!=""Current""]) > 0

  )

)

];

{noformat}

11 not possible, reason: ""not both active at the same time""

12 not possible, reason: ""neither used in ...""

13 not possible, reason: ""yet not ... by any of..."""	"18/Jan/17 11:42 AM;wfr;Moved all comments from this ticket into the doc page 

https://www.iteraplan.de/doc/display/iteraplan55/iteraQL+Examples



added example by Alex ""objectify count value of""



more concrete examples for the generic queries (attribute out of bounds ...)  possible. Please ask for it if needed.





"																																																			
