Extend existing logging service	"1. Extend the exception handling with further information:

* Extend the {{$exceptionHandler}} in {{app.js}} to log more information (at the moment only exception and cause): Log at least stacktrace and more information if available



2. Set default log-level from constants.js:

* At the moment the log-level is controlled by two url-paramters: https://www.iteraplan.de/doc/display/iteraplan55/Increase+log+level

* Set the default log-level by two new constants in the file {{constants.js}}. Default should be: ""loggerlevel=INFO"" and ""loggerappenderlevel=WARN""

* The url-parameters should still remain. If they are set, the url-parameters overwrite the values of constants.js



Hint: The logger-decorator and its methods are implemented in {{logger.js}}



3. Check, if all warnings and information of 3rd party libraries (e.g. ag-grid-warnings or gojs-information) is now logged to our log-file.

* If not, overwrite the native Javascript {{console.log}}-function to use our implemented $log-service (similar to second idea in the comment)

"		Improvement	iteraplan Speedbird	17/Nov/16 9:54 AM	14/Feb/17 5:45 PM														"13/Jan/17 4:42 PM;msr;First idea:



{code:java}

window.onerror

{code}

 could help combined with existing logging-service (implemented directly in {{app.js}}:

http://stackoverflow.com/a/6638310

https://blog.sentry.io/2016/01/04/client-javascript-reporting-window-onerror.html



Second idea:



Overwrite {{console.log}}:

http://stackoverflow.com/questions/8000009/is-there-a-way-in-javascript-to-listen-console-events



Meaningful errors:

https://github.com/occ/TraceKit

https://www.stacktracejs.com/"	"14/Feb/17 5:10 PM;roia;bq. and more information if available

 [~msr], I think, it could be useful to log the {{navigator.userAgent}} also, but the server should accept this property. If you find this information useful please create separate task for it."																																																					
