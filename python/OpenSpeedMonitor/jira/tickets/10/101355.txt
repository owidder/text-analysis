List view edit for relations	"- use directive for enums edit

- it should display options in vertical order now

- use it in list view for simple relations"	101353	Sub-task	iteraplan Thunderduck	03/Nov/16 11:44 AM	02/Dec/16 9:37 AM														21/Nov/16 10:01 AM;mse;At the moment, editing for relationship columns is disabled (ListColumnDefsBuilde.js, line 163) because the default ag-grid editor does not work for our relationship cell render. As soon as the correct editing widget for relationships is in place, please enable editing again.	"30/Nov/16 9:37 AM;mse;Editing is enabled now. However, there is an exception thrown by angular when a chip (i.e. relation) is removed. This is a known problem and should be fixed in the next release of angular-materials:

https://github.com/angular/material/issues/9520

The bug does not affect the functionality!"	"30/Nov/16 2:51 PM;mse;*Three problems* will be followed up in other tickets:



* There is a problem with the autocomplete list which is larger than the editor div. Therefore ag-grid stops editing when an item in the list is clicked -> to be followed up in IPTT-287

* The row height is not updated after the relation is edited. This is difficult to do with ag-grid (see note at the bottom of https://www.ag-grid.com/javascript-grid-row-height/). As this is also a problem when other rows change, this will be followed up in IPTT-277.

* The response to changes of parent is wrong (IPTT-288), therefore the client datamodel is not updated correctly when the parent column is edited.



*Comment on ticket description:*

* Vertcial alignment of chips is not provided by md-chips, so I used the default alignment (horizontal with line breaks)"	"01/Dec/16 11:43 AM;aan;The ""edit button"" is missing.

A request is send each time the edit is stopped, even if there where no changes."	"01/Dec/16 2:34 PM;mse;The second point is true for all editors: A request is always sent even if there was no real change. The response is like:



{code}

{

	""success"": true,

	""errorCode"": 6,

	""errorMessages"": [""No values to be updated for building block 206. Request Json ist empty or features already set to desired values.""]

}

{code}



So there shouldn't be a problem with the new client model and it should also not cause major perfomance issues.

I added also a comment to IPTT-241. Maybe it's worth too think about this issue there.



"	02/Dec/16 9:26 AM;mse;The first point ("Add edit button") will be followed up in IPTT-289 as this needs a little bit of refactoring.																																																	
