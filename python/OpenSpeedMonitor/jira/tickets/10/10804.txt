Zusammenführen der PlugIns	"Die Aufteilung in die PlugIns verursacht regelmäßig Mehraufwand. Zwar ist eine Modularisierung hilfreich, aber die derzeitige entspricht nicht mehr dem Stand der Dinge. 

Bei dem Upgrade auf 2.3.2 bietet sich an ALLE PlugIns zusammenzuführen. Sinnhafter Weise in iteraSpeedMonitor. Das redurziert den Entwicklungsaufwand. Ein iteraChart-PlugIn könnte zu einem späteren Zeitpunkt neu erstellt werden.

Ergebnis: Weniger dependency refreshes, schnelleres compiling. schneller Start in der Entwicklung ==> Zeitersparnis.

In der Schätzung ist der Umbau mit einem Tag beziffert, 4 Stunden repräsentieren den folgenden Test. Voraussetzung: Synchroner Stand mit HEAD (origin).

Nachteil: Historie wird intransparent."		Improvement	OpenSpeedMonitor	02/Dec/13 11:16 AM	30/Jan/14 4:32 PM														"11/Dec/13 2:06 PM;mzeimer;Geordnettes Vorgehen:

1. Die 5 ""äußeren"" Plugins in iteraSpeedResult integrieren (dieses wird von allen referenziert).
   In den einzelnen iteraSpeedScript, iteraSpeedReport, iteratecChart, iteraSpeedServerConfig, iteratecJmx.
   An dieser Stelle nähme ich auch das Chart-Plugin mit. Zu einem späteren Zeitpunkt könnte man dieses neu schneiden und heraustrennen. Derzeit enthält es durch die Klassen MeasuredValue und AggregatorType fachlichspezifische Logik.
2. Die 5 ""leeren"" Plugin-Projekt wirklich leeren und mit einer Readme ""Deprecated"" ausstatten.
3. iteraSpeedResult nach iteraSpeedOttoCsi integrieren.
4. Wie 2. für iteraSpeedResult.
5. iteraSpeedOttoCsi in iteraSpeedProxyConfig integrieren.
6. Wie 2. für iteraSpeedOttoCsi.
7. iteraSpeedProxyConfig in iteraSpeedMonitor integrieren.
6. Wie 2. für iteraSpeedProxyConfig.

Oder rabiat:
Alle relevanten source-folder in iteraSpeedMonitor anlegen, Quelltexte der anderen PlugIns dorthin kopieren, die URL-mappings, build-configs und views, sowie lib- und ressource ordner mergen und fertig... vielleicht.

P.S.: In den GSPs müssen bei den g:render Aufrufen die Plug-In-Referenzen entfernt werden!"	"20/Dec/13 7:40 PM;nkuhn;Habe entsprechend des geordneten Vorgehens begonnen, Plugins Stück für Stück zusammen zu ziehen:

Die Plugins iteraSpeedResult und iteratecChart habe ich aufgelöst und alle Artefakte zunächst ins Plugin iteraSpeedOttoCsi verlegt. Die aufgelösten Plugins enthalten keine relevanten Artefakte mehr und ich habe ein README geschrieben und gepusht."	16/Jan/14 2:53 PM;drieger;Plugin iteraSpeedScript ist nun auch in iteraSpeedOttoCsi integriert (gepusht im Develop-Branch)																																																				
