DetailAnalyseService kommt offensichtlich nicht mit Sonderzeichen im apiKey zurecht	"Die prod iteratec OSM-Instanz (http://openspeedmonitor.wpt.iteratec.de) ist die einzige ohne Sonderzeichen im apiKey. Nur bei dieser funktioniert bisher der DetailDatenService. 



Beim Aufruf des DetailDatenDashboards in einer anderen OSM-Instanz wirft der DetailDatenService diese Exception:





{code:java}

osm_da_1       | java.lang.Exception: Error field apiKey: Access denied! A valid API-Key with sufficient access rights is required!

osm_da_1       | 

osm_da_1       |        at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)

osm_da_1       |        at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)

osm_da_1       |        at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)

osm_da_1       |        at java.lang.reflect.Constructor.newInstance(Constructor.java:423)

osm_da_1       |        at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:83)

osm_da_1       |        at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:105)

osm_da_1       |        at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:247)

osm_da_1       |        at de.iteratec.osm.da.dashboard.DetailAnalysisDashboardController.show(DetailAnalysisDashboardController.groovy:50)

osm_da_1       |        at de.iteratec.osm.da.dashboard.DetailAnalysisDashboardController.show(DetailAnalysisDashboardController.groovy)

osm_da_1       |        at org.grails.core.DefaultGrailsControllerClass$MethodHandleInvoker.invoke(DefaultGrailsControllerClass.java:222)

osm_da_1       |        at org.grails.core.DefaultGrailsControllerClass.invoke(DefaultGrailsControllerClass.java:187)

osm_da_1       |        at org.grails.web.mapping.mvc.UrlMappingsInfoHandlerAdapter.handle(UrlMappingsInfoHandlerAdapter.groovy:88)

osm_da_1       |        at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:959)

osm_da_1       |        at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:893)

osm_da_1       |        at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:968)

osm_da_1       |        at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:859)

osm_da_1       |        at javax.servlet.http.HttpServlet.service(HttpServlet.java:622)

osm_da_1       |        at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:844)

osm_da_1       |        at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)

osm_da_1       |        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:292)

osm_da_1       |        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)

osm_da_1       |        at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)

osm_da_1       |        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)

osm_da_1       |        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)

{code}



Daher die Vermutung, dass es am apiKey liegt.

"		Bug	OpenSpeedMonitor	25/Jan/17 8:41 PM	15/Feb/17 11:09 AM														"15/Feb/17 11:09 AM;mmi;ApiKey sollte mit einfachen ' geqouted werden, damit die Zeichen nicht interpretiert werden.

ApiKey sollte nur aus Zeichen {{[0-9a-zA-Z\-]+}} bestehen."																																																						
