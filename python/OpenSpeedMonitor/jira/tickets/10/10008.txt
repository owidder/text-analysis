Anpassung Datenmodell (Klassenmodell)	"Zur Implementierung der Multistep-Messungen müssen die Domain-Klassen des iterSpeedMonitors angepasst werden.
Im angehängten Diagramm ist das angestrebte Datenmodell modelliert (zur Bearbeitung im Teamdrive: Spaces/iteraSpeed/dokumentation/Classes.dia)."	10318	Technical task	OpenSpeedMonitor	28/May/13 5:22 PM	30/Jul/13 10:51 AM														28/May/13 5:42 PM;nkuhn;Datenmodell, Ausschnitt zentrale Klassen	09/Jul/13 5:08 PM;jwerschmoeller;Rüdiger: Sieht abgeschlossen aus	"10/Jul/13 2:33 PM;mzeimer;Fast ein Dupplikat von IT-4, auf jeden Fall mit engem Bezug. Die Anpassung am Datenmodell liegt schwerpunktmäßig bei den WptResults und deren Referenzierung.

Bei der Schätzung sollte berücksichtigt werden, dass für Groovy/Grails kein angemessener refactoring-support existiert.

Aufgrund von vielen fehlenden Tests kann ich noch nicht bestätigen, dass dies umgesetzt ist.

Nebenbei: Die Anlage lässt sich nicht öffnen. :("	"22/Jul/13 3:24 PM;mzeimer;Entwürfe aus dem Meeting mit Christian und Rüdiger am 22.7.2013

IST:
!IST-Doamins.jpg!

SOLL:
!SOLL-Domains.jpg!

Umbenennungen (nur die ""simple class names"" wurden/werden geändert):
WptJobConfig -> Job
WptJobRun -> JobResult
WptResult -> EventResult (in Anspielung auf setEventName im Skript)
MeasuredStep -> MeasuredEvent (in Anspielung auf setEventName im Skript)
WptScript -> Script
WptLocation -> Location
WptServer -> WebPageTestServer

Komposition (wichtigste Klassen):
- 1 JobResult enthält n EventResult(s)
- 1 EventResult referenziert 1 MeasuredEvent (als Grundlage für Gruppierungen; 1 MeasuredEvent kann in n EventResult(s) referenziert werden)
- 1 MeasuredEvent referenziert 1 Page (MeasuredEvent ist quasi der EventName, also eine von n Arten, in der eine Page geladen werden kann)
- 1 JobResult gehört zu 1 Job"	"22/Jul/13 5:42 PM;mzeimer;Überdenken:

MeasuredEvent besser EventResultGroup nennen, da es sich hierbei ""nur"" um ein Gruppierungswerkzeug handelt!"	"23/Jul/13 11:57 AM;mzeimer;Der ""alte"" JobService wurde umebannt zu JobProcessingService,
der ""alte"" WptJobConfigService zu JobService"	"23/Jul/13 5:08 PM;mzeimer;Der bisherige Aufwand von 2 Entwicklertagen wurde ausschließlich für das Umbenennen der Klassen benötigt. Der nahezu nicht vorhandene refactoring-support hat hier erheblich Zeit verbruacht. 

Ein vollständies Ausschließen von Umbenennungen führte langfrsitig zu unverständlichen Code, daher ist dies notwendig. 

Zum Vergleich: In Java oder C# benötigt eine Umbenennung in der Regel wenige Sekunden und das Ergebniss ist stabil.

Sollte iteraSpeed langfristig weiterentwickelt werden, könnte es hilfreich sein, von der Dienstschicht aus ""abwärts"" das Projekt vollständig auf Java umzustellen. Sobald dann nur noch kleine Code-Bereiche der UI, also in den Controllern und den GSP-Taglibs, in Groovy vorliegen, dürften die refactorings deutlich schneller funktionieren.

Randbemerkung zu den Tests:
Zum auszuführen der gesammten Test-suite (inklusive Integrationstests) werden ca. 8 Minuten enötigt. Dies könnte in der Komplexität der Integrationstests liegen, ABER bereits das Ausführen aller Unit-Tests benötigt ca. 3 Minuten - Zum Vergleich: Ähnliche Unit-Tests in Java würden zwischen 100 und 200 Milli(!)sekunden benötigen. Dies bremst die Entwicklung leider auch stark ab - Das man auf Tests nicht verzichten sollte, ist denke ich nachvollziehbar.

Ein Vorschlag, die Geschwindigkeit kurzfristig etwas zu erhöhen: Alle Projekte zu einem Projekt zusammenführen. Dies würde die resolve-Zeiten zwischen den Projekten nach Änderungen aufheben.

Ein kompletter build-cycle (clean, compile) benötigt über alle Teilprojekte ohne Tests ca. 8-9 Minuten.

Wir könnten am Montag im Stand-up mal über diese Problematik (mit dem Gesamtteam) unterhalten, vielleicht gibt es noch weitere Optimierungsmöglichkeiten."	"23/Jul/13 5:57 PM;mzeimer;Stand Heute 23.7. / 18:45 Uhr:
- Alle Renames erledigt (MeasuredEvent blieb MeasuredEvent)
- Folgende Referenz ist fertig angepasst (siehe SOLL für domains oben): ""WebPageTestServer <> Location"" 
- Folgende Referenz ist angepasst, aber ein Paar Stellen sind nachzuziehen: ""JobGroup <> Job""."	23/Jul/13 6:12 PM;mzeimer;In IT-4 befinden sich Anmerkungen zum Update des Datenmodells, wenn Job-Ergebnisse verarbeitet werden (INSERTS). Die Gruppen und Seiten werden noch nicht zugeordnet, dies war allerdings bereits zu Beginn dieser Arbeiten Stand der Dinge.	"24/Jul/13 2:57 PM;mzeimer;Auffällig ist, dass viele Berechnungstests als Integrationstests realisiert sind, dies gilt insbesonder für iteraSpeedOttoCsi. Dieses Vorgehen ist recht ineffizient, da ein Integrationstest nicht explizit die Berechung testet und von Nebeneffeken (Bugs an anderen Stellen) beeinflusst werden kann.

Idee: Möglichst viele Berechnungstests auf isolierte Unit-Tests umstellen! berechnungsrelevante Daten werden dann gezielt simuliert.

Vorteile: 
- Tests laufen schneller und sind einfacher zu isolieren!
- Tests können bei der Gelegenheit vereinfacht werden.

Nachteil: 
- Möglichkeit der Fakturation des Aufwands müsste evaluiert werden.
- Schätzung benötigt."	24/Jul/13 4:38 PM;mzeimer;Aufwandschätzung um 2 Tage erhöht, da alles im refactoring "zu Fuß" erfolgen muss. Die automatischen Funktionen sehen nicht einmal die Properties bei der Erstellung von Domain-Exemplaren. Hinzu kommt die bereits zuvor erwähnte Problematik mit den clean und der Testausführung.	"24/Jul/13 4:58 PM;mzeimer;Stand 24.7.2013:
- Refactoring-Stand wie auf Graphik zu sehen:
!refactoring-stand-2013-07-24--1645cest.jpg!

- Noch bestehende Unit-Tests-Fehlschläge: ResultMeasuredValueUpdateServiceTests, 
- Noch bestehende Integration-Tests-Fehlschläge: Fast alle in isocsi (Möglicherweise gegenseitig beeinflusst)

- Es gibt ein Paar Notes im Code ""FIXME MZE-2013-07-* (architecture)"" zu Designfragen, über die wir mal reden könnten, falls Zeit ist."	"29/Jul/13 6:14 PM;mzeimer;Stand am 29.7.2013 um 18:15 cest:
!refactoring-Stand-2013-07-29--1815cest.jpg!

Die Referenz von JobResult auf MeasuredEvent ist in soweit in Ordnung, als dass diese durch einen Parameter in einer Hilfsoperation entsteht. Diese Hilfsoperation sollte man verschieben -> siehe entsprechendes FIXME in JobResult."	"30/Jul/13 10:51 AM;mzeimer;SOLL-Architektur mit folgender Ausnahme erreicht:
!final-result.jpg!

Die Referenz von JobResult auf MeasuredEvent ensteht durch einen Parameter in einer Hilfsoperation. Vorerst ist die Platzierung dieser Operation Ok."																																									
