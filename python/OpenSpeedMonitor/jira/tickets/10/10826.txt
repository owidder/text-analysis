Exception beim Schreiben nach Graphite verhindert Peristierung von EventResults	"Wenn beim Schreiben nach Graphite (im de.iteratec.ism.isreport.external.MetricReportingService) eine Exception fliegt werden keine EventResults mehr persistiert. Zwei Gegebenheiten führen zu diesem Umstand:

1)
Der MetricReportingService ist transactional und alle Aktionen in seinen Methoden laufen daher in der selben Transaktionsklammer wie das Schreiben der EventResults  (im de.iteratec.ispc.LocationAndResultPersisterService), da die Methode zum Schreiben der Results nach Graphite von hier aufgerufen wird.

2)
Wenn ein neues xml-Result reinkommt werden (v.a. bei Multistep-Jobs) mehrere EventResults geschrieben. Jedes einzelne wird hierbei auch für das Reporting nach Graphite weitergereicht. Fliegt hierbei eine Exception wird der Programmablauf unterbrochen und evtl. noch folgende EventResults werden nicht mehr geschrieben."		Bug	OpenSpeedMonitor	18/Dec/13 9:08 AM	18/Dec/13 9:20 AM														"18/Dec/13 9:20 AM;nkuhn;Zu 1)
Habe statt der statischen Variable ""transactional"" die neuen grails-Annotationen @Transactional und @NotTransactional verwendet.
Die ganze Klasse de.iteratec.ism.isreport.external.MetricReportingService ist transaktional und nur Methode reportEventResultToGraphite(EventResult), die zum Schreiben einzelner EventResults vorgesehen ist, habe ich nicht-transaktional gemacht.

Zu 2)
Ich catche die Exceptions, die ggf. beim Schreiben des Events nach Graphite geworfen werden und logge das entsprechend."																																																						
