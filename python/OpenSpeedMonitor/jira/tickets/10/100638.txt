Evaluieren wie die MicroserviceDaten effizient an den Browser geliefert werden können	"Momentan werden die Daten vom Microservice aus der MongDB geholt, in einen String verpackt und and den Osm übergeben, der die Daten neu verpackt und an den Browser ausliefert. Dies dauert deutlich zu lange, während die MongDB die Daten in unter einer Sekunde zur Verfügung stellt, braucht der Microservice 5 - 30 Sekunden.



Wir wollen die Daten:

* schneller zum Browser bekommen

* asynchron nachladen



Eine Idee wäre, die Daten von dem Browser aus per JavaScript direkt aus der MongDB  nachzuladen. Es ist aber noch ungeklärt, wie man die Authentifizierung umsetzt.

Eine andere Idee wäre es eine separate REST-Schnittstelle einzuführen, die zwischen JavaScript und MongoDB sitzt. 



Es ist zu recherchieren, welche Lösung am besten ist(performant, sicher, best practice)

"		Task	OpenSpeedMonitor	26/Oct/16 12:59 PM	01/Feb/17 1:48 PM					reevaluate									"07/Nov/16 5:55 PM;msk;Wir haben mehrere Probleme mit der Performance:

1. Bei umfangreichen Dashboards läuft der Microservice in eine OutOfMemory-Exception. Das lässt sich umgehen, wenn man das Standardlimit von 1Gb auf zB 4 Gb erhöht. Damit lassen sich dann zumindest 1-2 Tage anzeigen. Umsetzen könnten wir das über die build.gradle : 

{code:java}

bootRun {

    jvmArgs = [""-XX:MaxPermSize=1024m"", ""-Xms2G"", ""-Xmx4G""]

}

{code}

Trotzdem werden wir relativ schnell wieder in das gleiche Problem laufen, wenn zB jmd auf die Idee kommt sich die Daten von einem Monat anzeigen zu lassen. Da müssen wir ein Limit setzten.

2. Wir benutzen die MongoDB nicht nur zum speichern der Daten, sondern auch um relativ umfangreiche Aggregationen vorzunehmen. Die Aggregation-Pipeline in der MongoDB hat ein festes Memory Limit von 100 mb ([Doku|https://docs.mongodb.com/v3.2/core/aggregation-pipeline-limits/]). Wenn es größer wird, müssen wir das Zwischenspeichern von temporären Daten erlauben (_.allowDiskUse(true)_), was natürlich eher teuer ist.

3. Wir kopieren die Daten unnütz hin und her. Bei umfangreichen Dashboards (1 Tag Baur, alle Pages - ca 150.000 Assets) dauert die Datenbankabfrage ca 10s, das Übertragen der Daten in zum Browser 5s und das  Rendern 10s (Werte ganz grob). 

"	"07/Nov/16 5:56 PM;msk;Hier einmal unsere Datenbankabfrage, direkt in der MongoDB absetzbar. Parameter müssen natürlich ggfs angepasst werden. Am Ende werden die Ergebnisse gezählt, damit wir nicht nur den Pointer zurückbekommen.



{code}



db.assetRequestGroup.aggregate([

             {       

                ""$match"" : {

                    ""epochTimeStarted"" : {

                        ""$gte"" : NumberLong(1474840800),

                        ""$lte"" : NumberLong(1474934340)

                    },

                    ""jobGroup"" : {

                        ""$in"" : [ 

                            NumberLong(20)

                        ]

                    },

                    ""page"" : {

                        ""$in"" : [ 

                            NumberLong(1),

                            NumberLong(2),

                            NumberLong(3),

                            NumberLong(4),

                            NumberLong(5),

                            NumberLong(6),

                            NumberLong(7),

                            NumberLong(8),

                            NumberLong(9),

                            NumberLong(10),

                            NumberLong(11),

                            NumberLong(12),

                            NumberLong(13),

                            NumberLong(14),

                            NumberLong(15),

                            NumberLong(16),

                            NumberLong(17),

                            NumberLong(18),

                            NumberLong(19),                            

                            NumberLong(20),

                            NumberLong(21),

                            NumberLong(22),

                            NumberLong(23),

                            NumberLong(24),

                            NumberLong(25),

                            NumberLong(26),

                            NumberLong(27),

                            NumberLong(28),

                            NumberLong(29),

                            NumberLong(30),

                            NumberLong(31),

                            NumberLong(32),

                            NumberLong(33),

                            NumberLong(34),

                            NumberLong(35),

                            NumberLong(36),

                            NumberLong(37),

                            NumberLong(38),

                            NumberLong(39),

                            NumberLong(40),

                            

                            

                        ]

                    }

                }

            }, 

            {

                ""$unwind"" : ""$assets""

            }, 

            {

                ""$project"" : {

                    ""browser"" : ""$browser"",

                    ""epochTimeStarted"" : ""$epochTimeStarted"",

                    ""jobGroup"" : ""$jobGroup"",

                    ""mediaType"" : ""$mediaType"",

                    ""subtype"" : ""$assets.subtype"",

                    ""loadTimeMs"" : ""$assets.loadTimeMs"",

                    ""dnsTime"" : ""$assets.dnsMs"",

                    ""sslTime"" : ""$assets.sslNegotiationTimeMs"",

                    ""connectTime"" : ""$assets.connectTimeMs"",

                    ""timeToFirstByteMs"" : ""$assets.timeToFirstByteMs"",

                    ""downloadTimeMs"" : ""$assets.downloadTimeMs"",

                    ""measuredEvent"" : ""$measuredEvent"",

                    ""host"" : ""$assets.host"",

                    ""bytesIn"" : ""$assets.bytesIn"",

                    ""bytesOut"" : ""$assets.bytesOut"",

                    ""page"" : ""$page""

                }

            }, 

            {

                ""$group"" : {

                    ""_id"" : {

                        ""jobGroup"" : ""$jobGroup"",

                        ""mediaType"" : ""$mediaType"",

                        ""browser"" : ""$browser"",

                        ""subtype"" : ""$subtype"",

                        ""epochTimeStarted"" : ""$epochTimeStarted"",

                        ""measuredEvent"" : ""$measuredEvent"",

                        ""host"" : ""$host"",

                        ""page"" : ""$page""

                    },

                    ""loadTimeMs_avg"" : {

                        ""$avg"" : ""$loadTimeMs""

                    },

                    ""loadTimeMs_min"" : {

                        ""$min"" : ""$loadTimeMs""

                    },

                    ""loadTimeMs_max"" : {

                        ""$max"" : ""$loadTimeMs""

                    },

                    ""ttfb_avg"" : {

                        ""$avg"" : ""$timeToFirstByteMs""

                    },

                    ""ttfb_min"" : {

                        ""$min"" : ""$timeToFirstByteMs""

                    },

                    ""ttfb_max"" : {

                        ""$max"" : ""$timeToFirstByteMs""

                    },

                    ""downloadTime_avg"" : {

                        ""$avg"" : ""$downloadTimeMs""

                    },

                    ""downloadTime_min"" : {

                        ""$min"" : ""$downloadTimeMs""

                    },

                    ""downloadTime_max"" : {

                        ""$max"" : ""$downloadTimeMs""

                    },

                    ""sslTime_avg"" : {

                        ""$avg"" : ""$sslTime""

                    },

                    ""sslTime_min"" : {

                        ""$min"" : ""$sslTime""

                    },

                    ""sslTime_max"" : {

                        ""$max"" : ""$sslTime""

                    },

                    ""connectTime_avg"" : {

                        ""$avg"" : ""$connectTime""

                    },

                    ""connectTime_min"" : {

                        ""$min"" : ""$connectTime""

                    },

                    ""connectTime_max"" : {

                        ""$max"" : ""$connectTime""

                    },

                    ""dnsTime_avg"" : {

                        ""$avg"" : ""$dnsTime""

                    },

                    ""dnsTime_min"" : {

                        ""$min"" : ""$dnsTime""

                    },

                    ""dnsTime_max"" : {

                        ""$max"" : ""$dnsTime""

                    },

                    ""bytesIn_avg"" : {

                        ""$avg"" : ""$bytesIn""

                    },

                    ""bytesIn_min"" : {

                        ""$min"" : ""$bytesIn""

                    },

                    ""bytesIn_max"" : {

                        ""$max"" : ""$bytesIn""

                    },

                    ""bytesOut_avg"" : {

                        ""$avg"" : ""$bytesOut""

                    },

                    ""bytesOut_min"" : {

                        ""$min"" : ""$bytesOut""

                    },

                    ""bytesOut_max"" : {

                        ""$max"" : ""$bytesOut""

                    },

                    ""count"" : {

                        ""$sum"" : 1

                    }

                }

            }, 

            {

                ""$project"" : {

                    ""_id"" : 0,

                    ""jobGroup"" : ""$_id.jobGroup"",

                    ""mediaType"" : ""$_id.mediaType"",

                    ""browser"" : ""$_id.browser"",

                    ""subtype"" : ""$_id.subtype"",

                    ""epochTimeStarted"" : ""$_id.epochTimeStarted"",

                    ""measuredEvent"" : ""$_id.measuredEvent"",

                    ""host"" : ""$_id.host"",

                    ""page"" : ""$_id.page"",

                    ""loadTimeMs_avg"" : ""$loadTimeMs_avg"",

                    ""loadTimeMs_min"" : ""$loadTimeMs_min"",

                    ""loadTimeMs_max"" : ""$loadTimeMs_max"",

                    ""ttfb_avg"" : ""$ttfb_avg"",

                    ""ttfb_min"" : ""$ttfb_min"",

                    ""ttfb_max"" : ""$ttfb_max"",

                    ""downloadTime_avg"" : ""$downloadTime_avg"",

                    ""downloadTime_min"" : ""$downloadTime_min"",

                    ""downloadTime_max"" : ""$downloadTime_max"",

                    ""sslTime_avg"" : ""$sslTime_avg"",

                    ""sslTime_min"" : ""$sslTime_min"",

                    ""sslTime_max"" : ""$sslTime_max"",

                    ""connectTime_avg"" : ""$connectTime_avg"",

                    ""connectTime_min"" : ""$connectTime_min"",

                    ""connectTime_max"" : ""$connectTime_max"",

                    ""dnsTime_avg"" : ""$dnsTime_avg"",

                    ""dnsTime_min"" : ""$dnsTime_min"",

                    ""dnsTime_max"" : ""$dnsTime_max"",

                    ""bytesIn_avg"" : ""$bytesIn_avg"",

                    ""bytesIn_min"" : ""$bytesIn_min"",

                    ""bytesIn_max"" : ""$bytesIn_max"",

                    ""bytesOut_avg"" : ""$bytesOut_avg"",

                    ""bytesOut_min"" : ""$bytesOut_min"",

                    ""bytesOut_max"" : ""$bytesOut_max"",

                    ""count"" : ""$count""

                }

            },

            {

                $group: { _id: null, count: { $sum: 1 } }

            }],

            { allowDiskUse:true})



{code}"																																																					
