Define REST API	"As a starting point, read this:



GET <application>/api/user/23 ==> all settings of user with ID '23' as a single, combined JSON. 

No restriction on the type or format of the user ID other than: must be a valid part of a URI.



GET <application>/api/user/23/foo ==> settings for item with key 'foo' as JSON object, probably a JSON object.  

No restriction on the type or format of the key other than: must be a valid part of a URI.



PUT <application>/api/user/23/foo with JSON body: insert a setting item for user 23 with key 'foo', replacing an existing setting.

No validation, parsing, merging.



No PUT on full structure needed, as items are modified and subsequently stored one by one.



Access restriction on user settings needed, so that user A can not access data of user B, because user settings will become partly sensitive.



*See definition below!*"		New Feature	iteraplan Quickfox	03/Aug/16 2:23 PM	23/Aug/16 10:40 AM														"19/Aug/16 4:35 PM;mwe;See http://www.restapitutorial.com/ for a tutorial and basics.



Conditions:

* Read the userId from the request session.

* No validation, parsing, merging.

* The resulting setting value has to be parseable by {code:JavaScript}JSON.parse(jsonString);{code}



h1. Get user settings for all features for the requesting user

{code}GET /api/user/settings{code}

{code}

Result: 200

{

  ""settings"": [

    {

      ""featureName"": ""list/InformationSystem"",

      ""setting"": ""featureSettingAsStringParsableJSON""

    },

    {

      ""featureName"": ""list/ITService"",

      ""setting"": ""featureSettingAsStringParsableJSON""

    },

    {

      ""featureName"": ""ncd"",

      ""setting"": ""featureSettingOfNcdAsStringParsableJSON""

    }

  ]

}

{code}

h1. Get user settings for one specific feature for the requesting user

{code}GET /api/user/settings/list/InformationSystem{code}

{code}

Result: 200

{

  ""featureName"": ""list/InformationSystem"",

  ""setting"": ""featureSettingAsStringParsableJSON""

}

{code}

h1. Save one specific feature for the requesting user (replace existing user settings)

{code}PUT and POST /api/user/settings/list/InformationSystem{code}

{code}

Result: 200

{

  ""featureName"": ""list/InformationSystem"",

  ""setting"": ""featureSettingAsStringParsableJSON""

}

{code}"	"25/Aug/16 3:20 PM;tsu;the body for the PUT and POST should be: 



{code}

{

   ""setting"" : ""SettingsThatShouldBeSaved""

}

{code}

"																																																					
