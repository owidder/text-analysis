Strange behaviour for ReactionEvents with business function changes	"Timebox: 1 day ?



*Reproduce*:



*Add business functions:*

# Use an IS which has already at least one relationship to a business function (e.g. with ID 1)

# Add an additional relationship to another business function (e.g. with ID 2)

# Save the changes



Expected:

* ReactionEvents contains changes like:

{

   persistentName: ""businessFunctions"",

   removed: [],

   added: [2]

}



Actual:

* ReactionEvents contains changes like:

{

   persistentName: ""businessFunctions"",

   removed: [],

   added: [1, 2]

}





*Remove business functions:*

# Use an IS which has already at least two relationships to a business function (e.g. with ID 1 and 2)

# Remove one of the relationships (e.g. to BF with ID 2)

# Save the changes



Expected:

* ReactionEvents contains changes like:

{

   persistentName: ""businessFunctions"",

   removed: [2],

   added: []

}



Actual:

* ReactionEvents contains changes like:

{

   persistentName: ""businessFunctions"",

   removed: [],

   added: [1]

}



The bug seems to be related to some really strange hibernate problem (maybe with lazy loading), because the problem does not appear when one runs the steps with debugger and goes through the affected piece of code step-by-step."		Bug	iteraplan Thunderduck	01/Aug/16 2:43 PM	08/Aug/16 9:03 AM														03/Aug/16 10:31 AM;mse;Problem fixed and fix seems not to cause any further problem at other places.																																																						
