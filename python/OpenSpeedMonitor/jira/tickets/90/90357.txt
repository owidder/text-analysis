Num and enum Attributes on axes	"*Summary:*

User can select all *single-valued* numeric and enumeration attributes for the axes.



*Implementation Details:*

* Use *exact positioning* for numeric types - discrete positioning is in scope of IPTS-65

** the coordinates are calculated exactely, if you have num & num or enum & num on the axes

* All sections have the same size, i.e. the cells of the grid are all quadratic

* Only for numeric attributes: The number of sections should depend on the number and distribution of values, i.e. create an algorithm, that ensures

** is deterministic = has always the same result for the same input (no random component)

** the sections have all equal size = represent same range

** limit the number of sections from 3 to 12

** basic algorithm: start with 3 sections. If you have more than 30 values in one section, create another section. And check again, if you have more than 30 values in one section.

* Only for enumeration attributes: Use literals as sections

* Url: save number of sections (as stated in the next line)

* Save initial number of sections to the url and do only change the number of section if you change an axis or the content element type



*UI:*

* Legend: Show axes attribues on legend like in IPTS-69

* Toolarea:

** New main entry (2. position): ""Axes"" (German: ""Achsen"")

** Subentry: ""X-Axis"" (German: ""X-Achse"")

** Subentry: ""Y-Axis"" (German: ""Y-Achse"")

** Sub-Subentries for both axes: All single-valued numeric and enumeration attributes order alphabetically by their localised names and highlight actual selection"		New Feature	iteraplan Speedbird	13/Jul/16 5:04 PM	13/Sep/16 9:58 AM														09/Aug/16 3:54 PM;msr;Please put the attributes in grey boxes with black text	"25/Aug/16 1:34 PM;roia;{quote}

* Url: save number of sections (as stated in the next line)

* Save initial number of sections to the url and do only change the number of section if you change an axis or the content element type

{quote} - this is not implemented. 



Discussed this requirement with Marcel and got the following comment:

{quote}

What is the complexity of this algorithm for calculation? I think, it is linear because you go once through all elements. Correct?

If the algorithm is more complex than linear (e.g. quadratic), then we should not run every time through it. In this case, send this ticket back to development for Dima. He should save it to config-object and url.

{quote}

The current implementation does not look linear - for each of ranges we loop through all businessItems. E.g:

{code}

        yAxisRanges.forEach(function (key, index) {

            ...

            diagramModel.items[0].businessItems.forEach(function (item) {

                if (item.yAxisValue === key) {

                    item.position = {};

                    ...

                }

            });

        });

{code}



so if we have 10 ranges and 100 items we will make 10 loops over 100 items.

For me, the idea of saving the calculated number of sections in the URL does not look very safe, because it's data-dependent and user cannot change it from the UI. If data changes, use of the saved number of sections (instead of recalculation) can make the diagram look weird. Probably.

To make the algorithm linear I'd group items by sections, like I did for enums, if that's possible. Otherwise, save the number in URL.



Also I have made small optimization changes in the revision *4169*. [~dmkh], please review them. Comments regarding these changes are added to the review https://iteraweb.iteratec.de/fisheye/cru/IP-9"	31/Aug/16 2:32 PM;dmkh;Save number of sections in URL, make recalculation only at first time, after changing element type or attribute on axis. Revision *4214*.	13/Sep/16 9:54 AM;dmkh;Also, small refactoring in revision *4324*																																																			
