Improve subscriptions	"The notification functionality is placed in every save and delete method. It is very hard support this, so I suggest, that we use Spring AOP instead. It would be much simpler and brings more performance, since we don't need to make entity copies, if the notifications are disabled.
I also suggest, that the emails will be sent only after successful transaction. This can be implemented using Hibernate Listeners."		Improvement	iteraplan PO	13/May/11 8:45 AM	06/Sep/11 2:33 PM					hibernate	subscriptions								"09/Aug/11 2:53 PM;vsh;Another exception thrown during test execution on Hudson is

{code}

org.springframework.orm.hibernate3.HibernateObjectRetrievalFailureException: No row with the given identifier exists: [de.iteratec.iteraplan.model.Product#11]; nested exception is org.hibernate.ObjectNotFoundException: No row with the given identifier exists: [de.iteratec.iteraplan.model.Product#11]
	at org.springframework.orm.hibernate3.SessionFactoryUtils.convertHibernateAccessException(SessionFactoryUtils.java:663)
	at org.springframework.orm.hibernate3.HibernateAccessor.convertHibernateAccessException(HibernateAccessor.java:412)
	at org.springframework.orm.hibernate3.HibernateTemplate.doExecute(HibernateTemplate.java:411)
	at org.springframework.orm.hibernate3.HibernateTemplate.executeWithNativeSession(HibernateTemplate.java:374)
	at org.springframework.orm.hibernate3.HibernateTemplate.load(HibernateTemplate.java:551)
	at org.springframework.orm.hibernate3.HibernateTemplate.load(HibernateTemplate.java:545)
	at de.iteratec.iteraplan.persistence.dao.GenericBaseDAO.loadObjectById(GenericBaseDAO.java:294)
	at de.iteratec.iteraplan.businesslogic.service.ProductServiceImpl.deleteEntity(ProductServiceImpl.java:68)
	at de.iteratec.iteraplan.businesslogic.service.ProductServiceImpl.deleteEntity(ProductServiceImpl.java:60)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:309)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:183)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:150)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:80)
	at de.iteratec.iteraplan.businesslogic.common.SubscriptionsAdvice.deleteEntityAdvice(SubscriptionsAdvice.java:156)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:621)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:610)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:65)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:110)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:89)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:202)
	at $Proxy119.deleteEntity(Unknown Source)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:309)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:183)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:150)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:202)
	at $Proxy43.deleteEntity(Unknown Source)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:309)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:183)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:150)
	at org.springframework.aop.interceptor.AbstractTraceInterceptor.invoke(AbstractTraceInterceptor.java:113)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)
	at org.springframework.aop.interceptor.AbstractTraceInterceptor.invoke(AbstractTraceInterceptor.java:113)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:202)
	at $Proxy44.deleteEntity(Unknown Source)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:309)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:183)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:150)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:89)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:202)
	at $Proxy45.deleteEntity(Unknown Source)
	at de.iteratec.iteraplan.businesslogic.service.MassUpdateServiceImpl.deleteBuildingBlock(MassUpdateServiceImpl.java:425)
{code}"	09/Aug/11 4:20 PM;vsh;Problems with the exceptions solved.	10/Aug/11 8:32 AM;vsh;Please test whether sending notification emails via Spring AOP works. The aspects from #2398, see https://iteraplan.iteratec.de/projects/iteraplan/ticket/2398 will be implemented after that.	23/Aug/11 2:46 PM;vsh;Permission check (BB and attribute type group)	"28/Aug/11 1:52 PM;vsh;Suggested improvements copied from https://iteraplan.iteratec.de/projects/iteraplan/ticket/2398:
    - Die Email-Templates sind im Moment zu Flexibel (insgesamt 180 Templates). Diese müssen Vereinfacht werden. An dieser Stelle müssen die Tests vor der Umstellung geschrieben werden.
    - Die Changeset Klassen müssen refactored und die Datenstruktur verbessert werden. Im Moment werden Maps und Listen von Maps benutzt, statt dessen muss man neue Klassen erstellen mit den gewünschten Properties versehen.
    - Speichern eines Elements ohne Änderungen sollte nicht zum Versand einer Mail führen (siehe Kommentar) (low prio)
    - Änderungen an objektbezogenen Rechten sollen berücksichtigt werden (low prio)
    - Fehlerhafte Darstellungen beim Entfernen von Fachlichen Zuordnungen und Beziehungen zu Fachlichen Funktionen beheben (siehe Kommentar)
    - Beim Löschen eines BBE sollen Abonnenten dieses BBE-Typs eine Mail erhalten, nicht nur beim Anlegen (FIXED)
    - Änderungen per Massenupdate sollen zu vergleichbaren Mails führen wie auch die Einzelbearbeitung (FIXED) 

"	"02/Sep/11 4:19 PM;vsh;  - Die Email-Templates sind im Moment zu Flexibel (FIXED)
  - Die Changeset Klassen müssen refactored und die Datenstruktur verbessert werden. (FIXED)
  - Fehlerhafte Darstellungen beim Entfernen von Fachlichen Zuordnungen und Beziehungen zu Fachlichen Funktionen beheben (FIXED)
  - Änderungen an objektbezogenen Rechten sollen berücksichtigt werden (NOT VALID)"	06/Sep/11 2:33 PM;sfe;seems fine to me																																																
