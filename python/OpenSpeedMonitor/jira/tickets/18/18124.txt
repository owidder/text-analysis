Neben Highcharts rickshaw als Charting-JS-Bibliothek einbauen	"Die Highcharts-Lizenz ist nicht os-kompatibel (siehe IT-379). Daher soll konfigurierbar sein, welche charting-lib eingesetzt werden soll. Die default-lib soll rickshaw sein (http://code.shutterstock.com/rickshaw/).



*todo's Stand 28.08.2014:*



Den Aufwand abschätzen, um die folgenden Highcharts-Features mit Rickshaw zu implementieren:



# (Prio 1) -YAchsen anpassen-

# (Prio 3) -Export: Highcharts kann aktuelle Ansicht als PNG, JPG, PDF und SVG exportieren-

# (Prio 1) -Punkte müssen klickbar sein (beliebiger Link muss hinterlegbar sein)-

# (Prio 1) -YAchse zoombar-

# (Prio 2) -Legende anpassen- 

# (Prio 1) -Tip Text frei belegbar-

# (Prio 1) -X\-Achse: sinnvolle Zeitbeschriftung-

# (Prio 2) -Performance-

# (Prio 1) -Zoomfunktion X-Achse mit Mini-Ansicht realisieren-

# (Prio 2) -Refactoring-

# (Prio 2) -Testing-

# (Prio 1) -HTML Code des Graphen überarbeiten-

# (Prio 2) -rickshaw-taglib.js und rickshaw.js zusammenführen-"		Task	OpenSpeedMonitor	28/Aug/14 6:02 PM	06/Nov/14 8:51 AM														"01/Sep/14 3:39 PM;wst;Zu 1.

* Den zu visualisierenden Daten kann eine Skalierung mitgegeben werden. Dann muss noch eine dazu passende y-Achse gebaut werden (es können beliebig viele gebaut werden).

* Folgendes Beispiel hat dies bereits umgesetzt:

http://code.shutterstock.com/rickshaw/examples/scaled.html

* Erweiterungen:

** -nur eine Y-Achse auf der linken Seite, weitere auf der rechten Seite-

** -Y\-Achsen verschwinden lassen, wenn keine dazugehörende Graphen eingeblendet werden.-

**  -Schrift der Y-Werte kleiner, vertikal mit Labels beschriften-

** -der Graph wirk übersichtlicher wenn alle y-Achsen gemeinsame Linien im Graphen haben => die y-Werte sind krumm & beim reinzommen verschwinden Linien, bis im schlimmsten Fall garkeine mehr angezeigt wird => Lösungsansatz: die y-Werte so berechnen, dass gerade Zahlen dabei rauskommen (max y value dafür erhöhen)-

** -Beschriftung der y-Achse anpassen (192K bei Sekunden für Loadtime[s] z.B. nicht so passend), passend runden -> Formatter für y Achsen (TickFormatter)-

** -wenn die y-Achsen min und max Werte sehr klein sind, dann müssen Ticks auch Kommezahlen anzeigen-

** -Kategorie ""Other"" verursacht Probleme bei der y Achsen Skalierung-

** -runde Werte für die Achsen-Ticks-"	"01/Sep/14 3:43 PM;wst;Zu 2. -> {color:blue}Neues Ticket erstellt{color}

* Problem

graph besteht aus mehreren svg's -> mergen

* Clientseitige Lösungen

** Der Highchart-Graph ""lebt"" in einem div-Container (ist aber eine svg-Grafik). Folgendes Beispiel zeigt wie dieser per Javascript ausgedruckt werden kann:

http://stackoverflow.com/questions/2255291/print-the-contents-of-a-div

** Folgendes Beispiel zeigt wie ein svg-Element als PNG gespeichert werden kann

http://techslides.com/save-svg-as-an-image/

** unter webapp/js/rickshaw/ eingebundenes Script saveSvgAsPng.js speichert svg als png

* Serverseitige Lösungen

** wkhtmltopdf, batik toolkit, phantom.js, imagemagick

** Highchart Export-Server, gehostet bei Otto/Iteratec

"	"01/Sep/14 3:45 PM;wst;Zu 3. ERLEDIGT

* Folgendes Beispiel zeigt wie die Punkte des Graphen als div-Container selbst zusammengebaut werden können http://code.shutterstock.com/rickshaw/examples/hover.html

* Diesen kann ein onclick-Event mitgegeben werden, welches dann Javascript-Code ausführt.

* Rickshaw verbietet für genau diese Elemente click-events -> diese Eigenschaft in der rickshaw.css entfernen"	"01/Sep/14 3:50 PM;wst;Zu 4. 

* -einzelne y-Achsen unabhängig voneinader zoombar machen-

* UI bauen

** -Template ""Adjust Chart"" im Reiter ""CSV"" auch bei Standard Ansicht einbauen-

** -Dieses Template erweitern um Historie-

** -Je nach verwendeter Taglib muss entsprechender Javascript Code ausgeführt werden (auch wieder abhängig vom ""Schalter"" in der Config)-



"	"01/Sep/14 3:51 PM;wst;Zu 5.

* Die Legende kann selbst zusammengebaut werden, wie hier gezeigt: http://code.shutterstock.com/rickshaw/examples/hover.html -> Tatsächliche Lösung: kleine Anpassung in rickshaw.css

* Erweiterungen (TODO):

** -alphabetisch sortieren-"	"01/Sep/14 3:52 PM;wst;Zu 6. ERLEDIGT

* Der Tip Text kann selbst zusammengebaut werden, wie hier gezeigt: http://code.shutterstock.com/rickshaw/examples/formatter.html

"	"01/Sep/14 3:57 PM;wst;Zu 7. ERLEDIGT

* Die X-Achse kann selbst zusammengebaut werden, wie hier gezeigt: http://code.shutterstock.com/rickshaw/examples/x_axis.html

* Dafür muss intern der Linux Timestamp in ein für den Menschen lesbares Zeitformat konvertiert werden

* TODO

** Datum abhängig des gerenderten Zeitintervalls formatieren ( ab 3 Tage nur Tage zum Zeitpunkt 0:00Uhr, davor mit Uhrzeit)

** Datum <Umbruch> Uhrzeit, keine Sekunden

"	"01/Sep/14 3:58 PM;wst;Zu 8.

* -Die Performance wurde gesteigert, indem die Glättung der Kurve ausgeschaltet wurde (interpolation:linear im Graph gesetzt).-

* -Unnötiges Aufurfen von update() und render() verhindern; slider.render() ruft z.B. auch wieder graph.render() auf (und somit die ganze selbst gebaute update Reihe)-"	"10/Sep/14 11:35 AM;wst;Zu 9.

* hier ein Beispiel das dies bereits umsetzt http://code.shutterstock.com/rickshaw/examples/multi.html

** rickshaw.js bug: bei slider.preview args muss stack=false gesetzt werden

* sliden ist nicht sehr flüssig, wird erst beim ""Stehen bleiben"" der Maus aktualisiert

* wichtig: dann muss womöglich ein neues Zeitformat für die x-Achsen Beschriftung gewählt werden "	"10/Sep/14 11:47 AM;wst;Zu 10.

* -Interface: MultipleYAxisHtmlCreater -> HighchartImpl und RickshawImpl (in src/groovy); liefert html + 1 Javascriptaufruf (baut und übergibt benötigte Daten)-

* -Javascript-code in Rickshaw-Taglib.js auslagern, Methode die von oben genanntem Interface aufgerufen werden kann bereitstellen-

* Klassen wie HighChartTagLib.groovy umbenennen (generischer, z.B. in ChartTagLib) -> {color:blue}Neues Ticket erstellt{color}

* -passende id's und Klassen für html container (div, svg), css in rickshaw_custom.css auslagern-

* highchartTaglib.groovy: Highcharts.createChartHtml() und Highcharts.createChartMultiupleYAxis()  in einer Funktion vereinen -> {color:blue}Neues Ticket erstellt{color}

* -Dokumentation-

* Weite der Acoordeon Komponente aus dem Template _chart.gsp ist zu groß (bootrstrap 2.32) -> {color:blue}Neues Ticket erstellt{color}"	"10/Sep/14 11:52 AM;wst;Zu 11.

* -Zu testen- 

** -HigchartTagLib-

* -Jenkins Test schlagen fehl-"	"07/Oct/14 4:43 PM;wst;Zu 12.

* -zum Teil werden auf der linken y-Achse mehr Ticks dargestellt als auf den rechten; rechts werden diese zum Teil abgeschnitten; links stehen sie außerhalb vom Container-"	"06/Nov/14 8:51 AM;wst;Es gibt nun die Möglichkeit Charts mittels Rickshaw darstellen zu lassen. Verbesserungen und Erweiterungen der bestehenden Lösung sind in neuen Tickets aufgeführt:

* IT427: Export Funktion

* IT 428: Vereinheitlichen der Schnittstelle indem Highcharts angepasst wird

* IT 429: Bootrstrap-Html-Container zu groß

* IT 430: Klassen generischer benennen"																																										
