Tree view for hierarchical types	"Implement a tree view for hierarchical building block types. It should support:
* Data-structure in backend model: Tree structure of node (wrapper) objects for the result entites. (/)
* collapsing/ expanding subtrees (/)
* additional, user-chosen columns (like in flat list view) (/)
* sort by user-chosen columns (sort siblings within a subtree) (/)
* alternating row colour (zebra style) (/)
* quick action icons for edit, copy, delete (/)
* HTML tables will be used instead of span/div, because the presentation with HTML tables seems to be less error-prone (/)
* the (old) hierarchical navigation will not be shown (/)
* queries/searches will return the results with all their ""disabled"" (means: grey, without links/actions) parents to preserve the tree view. (/)
* use same controller and dialog memory classes: GuiSearchController, SearchDialogMemory. Use Helper for TreeView, because SearchDialogMemory is very big already. (/)
* ""pagination"" on node level: ""load all..."" to load all enties into the DOM (per page reload). Do only when the size of siblings is greater than a specified (property) value. => needed for IE8/9 performance. (/)

Re-ordering:
* JQuery UI sortable is used for reordering instead of JQuery Draggable/Droppable (/)
* implement a 1-step undo function to avoid accidential re-ordering (?) (WFR: not now)
* Enable/disable re-ordering mode on client-side. Visual feedback (?) (WFR: nothing for now)
* after re-ordering: Reload full page without AJAX.  (/)
* sequence: (/)
  -> browser makes request (/)
  -> controller ""translates"" request and calls method in service class (/)
  -> service class performs structure change (/) & consistency checks (?)
  -> controller commits changes  TEST (!)
* Write JUnit test for service method."		New Feature	iteraplan PO	05/Apr/13 5:06 PM	23/Jul/13 11:40 AM					hierarchy	treeview								"27/May/13 3:55 PM;sry;Found a minor issue in M2 which is printed by Tomcat during startup, if a session existed before:
{code}
java.io.WriteAbortedException: writing aborted; java.io.NotSerializableException: de.iteratec.iteraplan.presentation.memory.TreeViewHelper
{code}"	"06/Jun/13 3:16 PM;bra;i am experiencing a dragged element being randomly dropped when dragging around fast using IE8. This bug seems to be addressed in http://bugs.jqueryui.com/ticket/5197

wfr
extra bad because reordering is ""saved"" immediately, no cancel nor undo nor history...
SO must mot happen

bra:
(/) seems to be fixed by not applying a css-class to the placeholder when user agent is ie8 (see next comment)"	"07/Jun/13 10:21 AM;bra;by not using the placeholder option of the sortable, performance gets slightly better and the above mentioned behavior seems to be vanished


- for IE8: if this fixes the spurious drops, leave it out, (/)

- for all others, with lower priority: show that fancy outline, decide by user-agent or in JS in the browser, whatever works. (/)

 "	"07/Jun/13 10:24 AM;bra;(?) it is somehow unintuitive to have the dropped element sorted as sibling of the previous node. This means, that dropping between a parent node and its first child will make the dropped node the next sibling of the parent node although i dropped it at a place where i would expect it to get the first child of the parent node.

wfr

without a left/right aspect of the drag gesture we will not cover all cases.
For the moment, choose the less irritating option

without left/right aspect, there is either:
a) element dropped between parent X and first child is not new first child but next sibling of X
b) element dropped between last child and next sibling is not new last child but next sibling of X. (/)

a) is implemented now
b) is better, but not perfect either.

SO: 
- lower prio than IE 8 issues
- switch impl to b) (/)
- add left/right aspect (more like in 3.2)

bra:
(?) what to happen if element is dropped behind the last element?

wfr:
due to wfr's complexity metrics (amount of documentation needed) inserting the element as next sibling of the formerly last element is preferred (/)"	"07/Jun/13 10:28 AM;bra;we should not use links in the treeview, as IE8 does not allow dragging of links which makes reordering dependent of where you dragged the row. As the links do return false onclick they are somewhat useless anyway (except of opening the link in a new tab)

wfr
c:if!

the user expects exactly one of two behaviors:
a) link to detail in regular mode (/)
b) draggable in reorder mode (/)

SO: no a-elements in reorder mode, (/)
even if this is another c:if and a (full) page reload, as after a drop. (/)

deactivated links (return false on click) are not enough for IE8.

"	"07/Jun/13 10:46 AM;bra;as the root node is not displayed in the treeview, the heading of the treeview claims one more element being found as actually displayed

wfr: 
show real number of found items (/)
and accept that number jumps by one when switching views list/tree

reason: the local constency is more important then between views.
"	"07/Jun/13 10:57 AM;bra;(?) currently we enable partial loading on each node if the total size of the resultset exceeds the configured threshold.
my understanding of the spec. is to only enable partial loading on nodes where the amount of direct children exceeds the threshold.

wfr: 

1) avoid ""load one more"":

if list is longer than threshold, replace at least 2 items by a ""load more"" pseudo item.
example for threshold = 10
9 items: show all
10 items, show all
11 items: show 9 and ""load 2 more""
12 items: show 9 and ""load 3 more""

OR use a larger cut, for example if more than 9, cut back to 5 (plus one pseudo item)
that is the cut back parameter must less than threshold
NOT: if more than 10 show 10, because this leads to ""load 1 more""

solution: document this rule for the parameters, no check in code needed.


2) problem: either define threshold globally, and distribute restrictions down to list of leafs,
OR define threshold locally and accept a upper bound of items depending on tree structure.
BUT this could only be a problem with deep trees, which are not expected in real world models.

SO: local threshold: count in each inner node the number of children and cut off if over threshold (/)
"	"12/Jun/13 12:58 PM;bra;TODO: improve ui-feedback on the horizontal position of the element being dragged

alternatives:
# if dragged position changes, do a horizontal transition of text and icon to the position where the element will be sorted in
# if dragged position changes, jump text and icon to the position where the element will be sorted in
# on start of reordering, invalidate tree-level of dragged node (e.g. by moving the dragged node to the left (partly) outside the table"	"12/Jun/13 1:08 PM;bra;TODO:
* comments on the partial loading properties
* on ie8 sometimes there is no placeholder displayed (may be related to some collapsed nodes)
* preserve the scroll position when doing a page reload"	19/Jun/13 12:54 PM;bra;there are still errors in reordering if the tree is partially collapsed (/)	19/Jun/13 1:14 PM;bra;the expand/collapse icon of a node is still displayed even if all children have been moved to another node (/)	19/Jun/13 4:37 PM;bra;unfortunately IE10 does not apply the changed cursor on dnd	"21/Jun/13 4:35 PM;smo;(x) This is a drag & drop issue which is addressed in ITERAPLAN-1503 but since the commits for drag & drop where done on this ticket the solution of this problem should also be covered by this ticket:  If a user that has only read rights is logged in, under tree view he can choose ""sort by hierarchy"" and then then click the enbale/disable reordering button, he can even drag the elements but the actual order is not changed and at drop the previous is preserved (which is ok since he should not have the rights to do change the order) and a switch to list view happens. The user should not have the possibility to get as far as the enable reordering button.

Only as remarks:
(i) InformationSystems do not have hierarchy per se, which is noticeable in the fact that for InformationSystems there is no tree view. But in the list view there is no difference between InformationSystems and other Business Objects which have a hierarchy, we see in both cases a hierarchical name column. This could be confusing for a user that might expect the tree view option also for IS. Maybe another solution can be found here for the list view of IS.
(i) Getting to the possibility to reorder the elements in the list might be a little bit tedious and not so self explanatory for the user: choosing sort by hierarchy -> enable reordering. Maybe having directly the enable/disable reordering option."	21/Jun/13 5:02 PM;bra;on the other hand it may not be intuitive changing the sort order amongst with enabling reordering with one click on "enable reordering".	21/Jun/13 5:37 PM;sry;Please initialize the sort order to _hierarchical_ as soon as you switch to the tree view (for the first time). Then we'll only need that button for ordering along hierarchy if the user changed to sort criterion. But in the initial view, he can switch to reordering right away.	25/Jun/13 10:08 AM;bra;enable reordering button is now disabled if user has no update right on the BBType	25/Jun/13 10:25 AM;bra;[Changeset 20633|https://iteraplan.iteratec.de/projects/iteraplan/changeset/20633] belongs to here (committed against the wrong ticket ITERAPLAN-1560)	25/Jun/13 10:26 AM;bra;sort order is changed to hierarchical the first time the treeview is enabled.	"19/Jul/13 3:14 PM;sry;One more request for a refinement: Please show a popover on the ""Enable""/""Disable"" button with additional information for drag & drop re-ordering.
More details in oral communication."	23/Jul/13 11:40 AM;lba;(/) A detailed popover is displayed when hovering the "enable/disable reorder"-button.																																			
