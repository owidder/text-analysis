Exceptions during shutdown	See attached logs. I had created some diagram reports.		Bug	iteraplan PO	26/Jun/11 11:41 PM	01/Aug/11 8:28 AM					cycle	iteraplan	life							30/Jun/11 5:45 PM;kgo;Some, if not all, of the thread errors seem to be caused by a tomcat bug. It is to be determined, whether only the threads with key {{null}} are a tomcat issue.	30/Jun/11 6:17 PM;kgo;None of the thread errors are rooted in the iteraplan code. Thus, either reporting the error is a tomcat bug, or the corresponding libraries have a bug. It is quite likely that it is a tomcat bug (see http://wiki.apache.org/tomcat/MemoryLeakProtection#threadLocalPseudoLeak), since no memory leakage could be detected.	"30/Jun/11 7:07 PM;sry;I belive we can only do something about the Jawr ThreadLocals. Maybe there's already a new version out there, our we could try to fix up their code and contribute a patch upstream.

The other libraries seem to hard to fix."	07/Jul/11 2:44 PM;kgo;The memory leak in JAWR was reported to the developers of the framework. See http://java.net/jira/browse/JAWR-198.	07/Jul/11 6:16 PM;kgo;A bug regarding the memory leak in EClassImpl was reported in Bugzilla. The bug is accessible here: https://bugs.eclipse.org/bugs/show_bug.cgi?id=351471	"08/Jul/11 11:59 AM;kgo;The {{IllegalStateExceptions}} during shutdown are not a major issue - these occur, for example, when iteraplan is still processing a request while being undeployed. Yet, if these occur on a regular basis, we should have a look at them again.

The thread local errors can not be directly influenced by our code and, with the exception of the two reported bugs (see previous comments), it has been decided not to report further issues among framework providers at this stage."	08/Jul/11 6:35 PM;agu;I think, that the exceptions with EClassImpl are caused by the ThreadLocal, used in XmiImportServiceImpl class. Maybe I use the ThreadLocal in the wrong way?	08/Jul/11 6:51 PM;kgo;I shouldn't think so. It is rather the EClassImpl, which itself contains a ThreadLocal. The reported error is of a thread whose key is an instance of EClassImpl and not of an ImportContext.	"13/Jul/11 1:22 PM;sry;@agu: The {{ThreadLocal}} in {{XmiImportServiceImpl}} is used correctly, don't worry :-)

@kgo: I saw that there are sometime also warnings about ThreadLocals in Batik classes. Could you please investigate and report a bug to them? If it's seems feasible, maybe even create a patch for them."	14/Jul/11 11:29 AM;kgo;The JAWR memory leak has been fixed in their trunk (see http://java.net/jira/browse/JAWR-198).	14/Jul/11 12:45 PM;kgo;The fix of the JAWR community doesn't fix the memory leak reported by Tomcat when shutting down iteraplan. Also, their fix was checked in the 3.5 version, which is not yet released.	14/Jul/11 4:38 PM;kgo;The Batik Cleaner Thread does indeed also cause memory leaks. The issue is known and tracked under https://issues.apache.org/bugzilla/show_bug.cgi?id=48771. Once we obtain the release that fixes the issue, we would have to add the line {{CleanerThread.THREAD.exit();}} (or something similar if the fix differs from the one proposed in the patch currently available at the issue page) to the {{ContextListener.contextDestroyed()}} method.	15/Jul/11 3:55 PM;kgo;The memory leak of the {{DecimalFormatCache}} of Apache FOP (see last check-in) is already reported - see https://issues.apache.org/bugzilla/show_bug.cgi?id=51150.																																										
