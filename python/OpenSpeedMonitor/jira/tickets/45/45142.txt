Problem with SVG-based export of Information Flow Diagrams, when Information Systems with many sub-systems are selected	"To reproduce: Change the bank data in a way, that one information system has 15-20 sub-systems, and one of these sub-systems has around that many sub-systems itself, too.
Now create an Information Flow Diagram with all the involved information systems selected. Selecting Viso export will create a diagram with a large box for the information system with its many sub-systems. SVG-based export will significantly slow down, or, in case of many sub-systems (the given numbers should be enough for that), not create a diagram even within 15+ minutes."		Bug	iteraplan PO	13/Sep/11 2:47 PM	13/Oct/11 11:02 AM					informationflow									27/Sep/11 12:43 PM;kgo;The problem is caused by the orthogonal edge layout, which fails to route properly if a matrix of more than approx. nine subsystems (one in the middle) or more than one sublevel and more nested elements are present. A possible solution is to use the direct layout (currently used if an information system has more than a given number of interfaces) after a given threshold has been reached. Alternately, the orthogonal edge layout has to be modified, which resembles a greater effort.	27/Sep/11 7:11 PM;kgo;The solution to be adopted is to use the direct layout when appropriate.	"28/Sep/11 11:36 AM;kgo;The decision whether to use an OrthogonalEdgeLayout or a DirectEdgeLayout is now made in a different fashion. Up to now, the maximum.export.svg.interfaces.for.information.system property was used to specify the maximal number of interfaces for each (root) information system node directly. The new approach is to also take child information systems (and their interfaces) and the shape size into account and determine a ratio as follows:

A base ratio is determined by the value of the property and the width and height dimensions of a base information system shape. Then, for every concrete (root) information system shape in a specific graphic generation, a corresponding ratio is calculated, also taking the shape size and the accumulated number of interfaces of all (direct and indirect) sub-shapes into account. If the concrete ratio of any shape exceeds the base ratio, the DirectEdgeLayout is used.

While this method is also not deterministic (in the sense that it does not consider all factors, as for example the position of a given root shape, which does play a role) it should be restrictive enough to guarantee that the OrthogonalEdgeLayout will be used only when it will not fail and cause excessive generation duration."	13/Oct/11 11:02 AM;agu;good job :)																																																			
