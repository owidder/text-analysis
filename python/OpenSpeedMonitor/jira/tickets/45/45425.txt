History: Add display for not-yet shown changes	"The history should show all (tracked) changes, to be completely useful.
Some core property changes are not yet displayed, but are saved correctly in the DB. See below comment for details. One other detail that is most probably missing are changes to the attributable association ISR-BO.

Changes on enum and responsibility attributes are still ignored, but are probably harder to solve -> separate ticket ITERAPLAN-701."		Improvement	iteraplan PO	14/Mar/12 10:04 AM	22/May/12 5:00 PM					history									"14/Mar/12 3:25 PM;lci;These are the results of the test of ticket ITERAPLAN-503

* Hierarchy
** superordinate-IS doesn't work:
javax.el.PropertyNotFoundException: Property 'superordinateLabelKey' not found on type  de.iteratec.iteraplan.diffs.model.InformationSystemReleaseChangeset
** functionality seems fine in most other cases. Its display is not very user-friendly though, as only the value-change is shown, without any indication of which is the old and which is the new value (column-headers would be helpful)

* Relations
I probably didn't catch all the problematic relations, I didn't try _all_ relations in _all_ BBs.
** changes to subordinate-IS are shown under the ""subordinate business unit""-tag
** successor relation in ISR and TCR only shows ""No known changes"" (predecessor shown correctly on the other end)
** specialisation of BO only shows ""No known changes"" (shown correctly on the other end)
** used by relation in TCR only shows ""No known changes"" (shown correctly on the other end)
** changes to the interfaces (from, to) only show ""No known changes"" at both ends, changes to the transported objects are displayed correctly only at the BO-end

The majority of the other relations seem to work. I can go through relation-by-relation and bb-by-bb in the next iteration if necessary.

* Attributes
Don't work, as stated. Changes may break the view though with following exception, making the history tab no longer accessible.
{code}
[ERROR] [2012-03-14 15:03:56] (service.diffs.AttributesDiffer)  Error[findAVByATIdInAVAs]: AT was null, skipping
[ERROR] [2012-03-14 15:03:56] (service.diffs.AttributesDiffer)  Error[findAVByATIdInAVAs]: AT was null, skipping
[ERROR] [2012-03-14 15:03:56] (service.diffs.AttributesDiffer)  Error[findAVByATIdInAVAs]: AT was null, skipping
[ERROR] [2012-03-14 15:03:56] (dialog.History.HistoryController) During history retrieval, an error occurred
de.iteratec.iteraplan.common.error.IteraplanTechnicalException: An error ocurred while retrieving this elements historical revisions.
	at de.iteratec.iteraplan.presentation.dialog.History.HistoryController.localHistory(HistoryController.java:148)
	at sun.reflect.GeneratedMethodAccessor1196.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springframework.web.bind.annotation.support.HandlerMethodInvoker.invokeHandlerMethod(HandlerMethodInvoker.java:176)
	at org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter.invokeHandlerMethod(AnnotationMethodHandlerAdapter.java:436)
	at org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter.handle(AnnotationMethodHandlerAdapter.java:424)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:923)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:852)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:882)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:778)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:617)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:717)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at de.iteratec.iteraplan.presentation.ContextFilter.doFilter(ContextFilter.java:103)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:311)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:116)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:83)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:182)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:173)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:88)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:563)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:127)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:291)
	at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:859)
	at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:602)
	at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:489)
	at java.lang.Thread.run(Thread.java:662)
Caused by: java.lang.IndexOutOfBoundsException: Index: 4, Size: 2
	at java.util.ArrayList.RangeCheck(ArrayList.java:547)
	at java.util.ArrayList.set(ArrayList.java:337)
	at org.hibernate.envers.entities.mapper.relation.lazy.initializor.ListCollectionInitializor.addToCollection(ListCollectionInitializor.java:83)
	at org.hibernate.envers.entities.mapper.relation.lazy.initializor.ListCollectionInitializor.addToCollection(ListCollectionInitializor.java:39)
	at org.hibernate.envers.entities.mapper.relation.lazy.initializor.AbstractCollectionInitializor.initialize(AbstractCollectionInitializor.java:67)
	at org.hibernate.envers.entities.mapper.relation.lazy.proxy.CollectionProxy.checkInit(CollectionProxy.java:50)
	at org.hibernate.envers.entities.mapper.relation.lazy.proxy.CollectionProxy.contains(CollectionProxy.java:65)
	at de.iteratec.iteraplan.businesslogic.service.diffs.SelfRelationDiffer.addHierarchyDiffs(SelfRelationDiffer.java:78)
	at de.iteratec.iteraplan.businesslogic.service.diffs.BBChangesetFactory.createProductChangeset(BBChangesetFactory.java:185)
	at de.iteratec.iteraplan.businesslogic.service.diffs.BBChangesetFactory.createChangeset(BBChangesetFactory.java:110)
	at de.iteratec.iteraplan.businesslogic.service.HistoryServiceImpl.getLocalHistoryPage(HistoryServiceImpl.java:116)
	at sun.reflect.GeneratedMethodAccessor924.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:318)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:183)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:150)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:110)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:90)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:202)
	at $Proxy160.getLocalHistoryPage(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor924.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:318)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:183)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:150)
	at org.springframework.aop.interceptor.AbstractTraceInterceptor.invoke(AbstractTraceInterceptor.java:113)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)
	at org.springframework.aop.interceptor.AbstractTraceInterceptor.invoke(AbstractTraceInterceptor.java:113)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:202)
	at $Proxy160.getLocalHistoryPage(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor924.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:318)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:183)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:150)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:110)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:90)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:202)
	at $Proxy205.getLocalHistoryPage(Unknown Source)
	at de.iteratec.iteraplan.presentation.dialog.History.HistoryController.localHistory(HistoryController.java:146)
	... 53 more
{code}

* Further possible improvements
** make the displayed elements clickable so to redirect to the right object, as in many other places in iteraplan
** make the layout (e.g. pagination) more consistent with other pages

* Code
** the logic in {{HistoryBBChangeset#isRelationsChanged()}} (whether the *Added and *Removed lists are equal) is slightly confusing. Checking whether the lists aren't empty might be more intuitive.
** the subclasses of {{HistoryBBChangeset}} hold the changes in 2 lists per BB-specific relation. A new class could contain, for each relation, these 2 lists, and implement any further differantiation logic. This would make the subclasses less specific and more extensible. Using generic methods on meta-model-level when handling the relations could also provide maximum modifiability.
** documentation very good
** tests provide good coverage

* Database problems during initalization/enabling of history
Enabling the history didn't work, but this was due to some local database's inconsistent state. After dropping the whole database once, both the db.reset target with enabled history and the initialize_history migration script worked just fine."	22/May/12 9:30 AM;fma;Sorry, habe etwas gespielt :-)	22/May/12 3:25 PM;sry;I haven't implemented all the suggested improvements, but some more data is shown, in particular the hierarchy and runtime and status changes. For details, please look at the commit comments.	"22/May/12 4:42 PM;lci;*Fixes*
* superordinate ISR change doesn't break jsp anymore, ok
* hierarchy changes show the right bb-type, ok

*Functionality*
* General attributes
** name, description, status ok
** runtime ok, small issue: even if only one of the two runtime values is changed, both entries are displayed (the unchanged date without from or to values, just the empty line). 

* Hierarchy
** all fine but the successor relationship, as stated

* Relations
** creating a new bussiness mapping produces one or multiple entries which are either empty or display ""no known changes""
** same for interfaces
** rest works fine

* Attributes
** numeric, text and date attributes work fine
** enum shows only the ""from"" value
** changes for responsibility attributes aren't tracked at all

*Code*
* Same remarks as in initial test comment

*Layout*
* the column widths for ""from"" and ""to"" values very strongly depending on values length

*Misc*
* empty changes (i.e. adding one element to a relationship and removing it in the same transition, before saving) display a change set with ""no known changes"""																																																			
