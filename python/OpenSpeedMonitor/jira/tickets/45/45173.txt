Introduce unique-constraint for (ID_BB,ID_AV) the AVA table of the database	"iteraplan releases before 2.9.M3 (where the functionality of creating a new release of an information system was changed) can cause duplicated attribute value assignments for enum attribute types, meaning there are two rows in the AVA table with the same ID_BB and ID_AV. That's usually not noticable, since the iteraplan UI displays only one of these values for non-multivalue attribute types, but it shows in the excel export.
While this issue, when creating new releases of an information system, isn't existent anymore due to the recent changes of how new releases are created, it would be good to add a constraint to the database table so two rows cannot have the same ID_BB and ID_AV to prevent such an error in the future."		Improvement	iteraplan PO	04/Oct/11 3:26 PM	17/Oct/11 2:41 PM					database									"04/Oct/11 3:47 PM;sfe;There should also be a possibility to clean up a database corrupted in the above described way. Problem is that after the duplicated entries of the AVA table are created, further editing of the according attribute value assignment via the iteraplan UI only affects one of both values. So it's difficult, if not impossible, to decide which one is the ""real"" one, and which one can be deleted.
Investigating if there is a rule behind which of the assignments is visible on the UI to delete the other one is a possibility.
Another possibility would be to delete one of the both assignments relating to the same non-multivalue attribute type per building block, for each entry like that, and print a list of the changed building blocks and the removed and kept attribute values for the customer to check if the changes are how they should be."	11/Oct/11 4:23 PM;mba;I had a look into the mysql verion of the "repair_corrupted_ava_table" script and went through the process once. From my understanding, you're trying to log any changes in the table "repair_log". Currently you only insert the "KEPT_ATTRIBUTE_VALUE" which I find is quite useful, but I think it'd be more important to log the rejected values here (as well). Currently I do not see any possibility to reproduce deleted entries, once the script ran through.	12/Oct/11 9:13 AM;mba;integrating additional logging fuctionality which allows the reproducing of dismissed AV(A)s	"12/Oct/11 12:48 PM;mba;As discussed this morning, I added some additional logging to display the dismissed AVAs as well.
TODOs:
* testing
* integrating new log table in oracle script
* clarification: The script fixes all duplicate AVAs, but the repair_log table is limited to TCRs and ISRs; I'm not sure whether the problem of duplicate AVAs is limited to thes BBTs, but I don't think the script should be able to delete AVAs of other BBTs without beeing abled to log them!"	"17/Oct/11 9:50 AM;mba;Tested mysql version only:
* Script works as expected
* Logs are more expressive now
=> OK
TODOs:
* Testing of oracle version (or at least asserting tha similarity)"	"17/Oct/11 2:18 PM;mba;While comparing the two scripts (mysql vs. oracle), I found some differences:
* mysql@Line 86: documentation is missing (compared to oracle@Line 96)
* oracle@Line 115: reads ""... NAME"" instead of ""...as NAME"" (inconsistent)
* {color:red}*oracle@Line 93: grouping by ""..AVA.ID"" instead of AVA.ID_AV* (compared to mysql@Line84){color}"	17/Oct/11 2:36 PM;sfe;Fixed the oracle script according to Markus' comment.	17/Oct/11 2:41 PM;mba;mysql and oracle checked!																																															
