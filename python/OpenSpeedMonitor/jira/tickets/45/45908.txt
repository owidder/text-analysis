Hibernate causes deadlock when number of writing threads exceeds the maximum number of database connections	"If many threads are performing write actions on the database, a bug in Hibernate may cause a deadlock. This happens when there are more writing threads on tomcat than the maximum number of connections specified in {{iteraplan_db.properties}}.
The reason for this is that a thread that is not holding a connection may acquire a lock on {{TableGenerator}}, blocking all connected threads, before establishing a connection. However, since the maximum number of threads are already connected, neither can continue operation.
See issue ITERAPLAN-1727 for further details, how to reproduce this and the current workaround avoiding this problem.
It is unknown (but unlikely) if this bug was already adressed in recent releases or will be with upcoming releases. A possible solution would be to switch to another id strategy (if that is possible) or to exchange hibernate with a different technology."		Bug	iteraplan PO	18/Jul/13 4:46 PM	04/Jul/14 4:08 PM														"01/Jul/14 4:58 PM;gph;According to several statements on the internet, the *DBCP* connection pool implementation (which iteraplan uses) is very well known to cause these type of errors, whereas the *c3p0* implementation is supposed to be more mature and stable due to an asynchronous approach when checking connections in/out of the pool. This claim should be proven by tests.
http://stackoverflow.com/questions/520585/connection-pooling-options-with-jdbc-dbcp-vs-c3p0
http://stackoverflow.com/questions/5714511/deadlock-issue-in-dbcp-deployed-on-tomcat
http://javatech.org/2007/11/c3p0-connectionpool-configuration-rules-of-thumb/

Switching the connection pool implementation to c3p0 _might_ be a solution for this defect. It can be changed by wiring the class ""com.mchange.v2.c3p0.ComboPooledDataSource"" into the Spring bean ""masterDataSource"" inside ""applicationContext-datasource.xml"" instead of DBCP's ""org.apache.commons.dbcp.BasicDataSource"". The parameters must be adjusted accordingly. Some parameters have equivalent counter-parts, others don't.
"	04/Jul/14 4:08 PM;gph;Problem could be reproduced by multiple testers.																																																					
