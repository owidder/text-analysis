Update Libraries in iteraplan (3.3)	"Some third-party libraties that may be updated during the developement of iteraplan 3.3, in particular some of the following:
* Twitter Bootstrap (at least 2.0.4, newer version depending on effort) (/) (2.3.2 in use now)
* Google Guava to 16.0.1 (/)
* Google Gson to 2.2.4 (/)
* SLF4J 1.7.x (/)
* add JavaMail dependency in latest version (/)
* Spring 3.2 (improves Java 7 compatibility, amongst other news) (following details from original  ITERAPLAN-1586, BUT check for current versions and possible conflicts AGAIN)
** Spring Framework 3.1.4.RELEASE to 3.2.8.RELEASE (/)
** Spring Security 3.1.4.RELEASE to 3.2.2.RELEASE (/)
** Spring Webflow 2.3.2.RELEASE already newest (/)
** Hibernate ORM 3.6.10.Final already newest 3.x (/)
** Hibernate Search 3.4.2.Final already newest 3.x (/)
* ZXING QR code generator library (addressed in sub-issue ITERAPLAN-1667) (/)
* DWR to 3.0 (in order to avoid the small security tradeoff made for ITERAPLAN-1436) - at the moment only release candidate, also not supported by JAWR outside of snapshot versions yet, thus the dependency was not updated
* JAWR 3.5 (to avoid ThreadLocal warn messages) (/)
* Apache Commons Fileupload to 1.3.1 (to get rid of a security issue) (/)
* Restlet to 2.2.0 (/)
* Joda Time in iteraplan to 2.1 to match elastic MI (/)

This issue is the successor of ITERAPLAN-1374 (for iteraplan 3.2) and ITERAPLAN-1586 (for iteraplan 3.1)"		Task	iteraplan PO	10/Oct/13 11:20 AM	16/Apr/14 3:57 PM					library	third-party	update							"16/Apr/14 11:42 AM;gph;Currently, we have two versions of apache commons-lang in /WEB-INF/lib.
In iteraplan 3.2.0 we had only commons-lang 2.6

An increasing number of libraries use commons-lang 3.1, hence it must be included anyway.

Have both versions should not cause any problems, because they have different Java package names:
{code}import org.apache.commons.lang -> import org.apache.commons.lang3{code}

... and Maven group/artifact IDs:
{code}
groupId: commons-lang -> org.apache.commons
artifactId: commons-lang -> commons-lang3
{code}

if we use lang3 in the code, we should declare the dependency exlicitly."																																																						
