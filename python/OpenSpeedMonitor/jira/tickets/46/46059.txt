Improve import-performance	"when uploading data with the importer one or both of these operators
- removeOrphanedAttributeValues()
- deleteOrphanedBusinessMappings()
are called with every import of one of the following BBs:
BP, BU, PROD
IS
BO, TC, IE.

Calling the two operations every time slows the import-process down. It would be sufficient when the two statements are called once after all the element-inserts are done.

(For more information best ask Christian Schweda)

Further steps:

* refactor the importer to handle lists of diffs instead of each diff separately
* add a saveOrUpdate(List<B>, boolean) method to BuildingBlockService which savesOrUpdates the List and executes cleanups once if called with true.
* implement a saveOrUpdate within AllBuildingBlockService taking a AllBuildingBlockContainer (something like a model) containing Lists of all BuildingBlocks to saveOrUpdate and executing the cleanup once after saveOrUpdate has been executed for all BuildingBlocks within the container.

With these steps the importer is no longer responsible for cleaning up after it has finished its update operations. These steps will be addressed in ITERAPLAN-1957"		Improvement	iteraplan PO	09/Sep/13 4:30 PM	04/Oct/13 10:11 AM					import									18/Sep/13 10:48 AM;bra;needs architectural clarification with wfr	"27/Sep/13 9:27 AM;bra;As a first step we add a flagged saveOrUpdate method not executing the cleanups when called with false. The non-flagged method calls the new one with cleanup=true to keep default behavior. Additionally we add the new AllBuildingBlockService which is capable of executing the cleanups. If one calls the method with cleanup=false, the caller is responsible for executing the cleanups.

Further steps:
* refactor the importer to handle lists of diffs instead of each diff separately
* add a saveOrUpdate(List<B>, boolean) method to BuildingBlockService which savesOrUpdates the List and executes cleanups once if called with true.
* implement a saveOrUpdate within AllBuildingBlockService taking a AllBuildingBlockContainer (something like a model) containing Lists of all BuildingBlocks to saveOrUpdate and executing the cleanup once after saveOrUpdate has been executed for all BuildingBlocks within the container.

With these steps the importer is no longer responsible for cleaning up after it has finished its update operations."	"04/Oct/13 10:11 AM;isc;I have tested the changes with the test data by Jana.
The Perfomace could be improved."																																																				
