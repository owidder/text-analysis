Spaces in LDAP base cause an error on startup	"When the ""ldap.base"" property includes spaces, then the Spring application context cannot be instantiated, and thus iteraplan doesn't start.



{code}

Caused by: java.lang.IllegalArgumentException: Root DNs must be the same when using multiple URLs

	at org.springframework.security.ldap.DefaultSpringSecurityContextSource.<init>(DefaultSpringSecurityContextSource.java:62)

	at de.iteratec.springframework.security.ldap.LdapSpringSecurityContextSource.<init>(LdapSpringSecurityContextSource.java:94)

	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)

	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)

	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)

	at java.lang.reflect.Constructor.newInstance(Unknown Source)

	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:147)

	... 121 more

{code}



The reason for this behavior is, that the property's value is used (without escaping) to build the LDAP connection URL. Spaces in LDAP base are valid, but spaces in URLs aren't.



Spring Security Ticket:

https://jira.springsource.org/browse/SEC-2040



Modify the class ""de.iteratec.springframework.security.ldap.LdapSpringSecurityContextSource"" from the Spring Security Extensions sub-project in a way, that the baseDn value is (URL-)encoded when the LDAP connection URL is built, but un-encoded for the ""normal"" baseDn field. The provided code from the Spring Ticket above can be used.



Adjust the comments in this class and remove deprecation."		Bug	iteraplan PO	26/Nov/13 1:50 PM	11/Nov/15 4:22 PM					authentication	ldap	security							28/Nov/13 2:43 PM;gph;Stopped progress, because the solution from the ticket did not work properly. Reverted all changes in iteraplan and in SpringSecurity extensions projects.	"10/Nov/15 2:21 PM;gph;This issue is hard to fix in the code, because

* when the baseDN is entered masked (for example: spaces are replaced by %20), then the context binding works, but the user queries fail.

* when the baseDN is entered un-masked (for example: contains spaces), then the Spring mechanism for separating multiple entries with a StringTokenizer throws the above error (see stacktrace in description).



A workaround for this case would be to specify a baseDN without forbidden characters (like spaces) nearer to the LDAP root which doesn't contain the forbidden path segment, or even an empty bindDN, if necessary. The search base for users and roles can then contain the path segment(s) containing the special characters.



*Example with baseDN without spaces*:

_url_: ldap://myhost

_baseDN_: dc=mydomain

_search.base.(user|role)_=   (empty)

=> _bind-address_: ldap://myhost/dc=mydomain/

=> _searches_: ldap://myhost/dc=mydomain/*

(/) Works



*Example with baseDN containing spaces*:

_url_: ldap://myhost

_baseDN_:db= my domain

_search.base.(user|role)_=   (empty)

=> _bind-address_: ldap://myhost/dc=my domain/

(!) Fails



*Change previous example to empty baseDN with search.base*:

_url_: ldap://myhost

_baseDN_:    (empty)

_search.base.(user|role)_: dc=my domain

=> _bind-address_:  ldap//myhost/

=> _searches_: ldap://myhost/dc=my domain/*

(/) Works

"	"11/Nov/15 4:22 PM;gph;If this case occurs, try solution from this comment:

https://iteraweb.iteratec.de/jira/browse/ITERAPLAN-2236?focusedCommentId=89439&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-89439



No further changes necessary at the moment."																																																				
