AdditiveImportStrategy fails to detect changes if they are to be applied on OneToMany relationships	"due to connects in updatediffs on OneToMany relationships being ignored, a change on such a relationship currently results in only one message instead of a message for each end being updated. (see AdditiveMergeStrategy#filterConnect(...))


Example: 
child, parent: information sytems.

before: child has no parent

action steps: 
* export
* set parent as parent of child in Excel
* NO other changes
* import

expected: 1 message, ""2 IS changed"".

actual: ""1 IS changed""

hypothesis/explanation:

match/diff has 
* update diff on child with connect from child to parent
* update diff on parent with connect from parent to child 

additive merge strategy ignores connects and disconnects on the many side of a one-to-many relationship. 

Reason: disconnects on the many side can be real disconnects that must be ignored by the strategy,
They may be part of a reconnect, that must not be ignored by the strategy.
But these reconnects are implied by the disconnects/connects on the one-side.
So for the effect on the elastic model and on the hibernate repo, the disconnects and connects on the one-.side are sufficient
BUT not for the messages.

For the problem stated in the original ticket, it would be a fix to ignore only the disconnects on the one-side, but to let pass all connects.
BUT this still leaves the problem for the inverse case:

child, parent-old, parent-new: IS

before: child has parent-old as parent.
action: export - set parent-new as parent of child

expected: message: 3 IS changed
actual now: 1 IS changed.
actual after fix above: 2 IS changed


match diff has 
* update on parent-old with disconnect (many-side, ignored ((alpha)))
* update on parent-new with connect (as-is: ignored, fixed as above: pass)
* update on child: disconnect and connect

ad ((alpha)): 
find a way to see that the disconnect is OK under the additive strategy because it is part of a reconnect.

IDEA
If one could ask the disconnect at parent old if its counterpart on the child has a connect to some other parent within the update diff on child...
"		Bug	iteraplan PO	07/Mar/14 10:43 AM	07/Apr/14 11:43 AM																																																																				
