Research drag and drop for reordering in nesting cluster diagram	"For the existing nesting cluster diagram, research drag and drop gestures for reordering the outer and inner boxes.

Note that this is a research ticket in preparation of two (or more) feature tickets using drag and drop.

For the more visual questions below, we can start with a preliminary solution and ask Tanya for a final design. 

Look for solutions to these points:

(1) The draggable element (inner or outer box) must give a visible hint that it is visible. Look for a simple visual hint that a user already knows from other (web) user interfaces. Look for a visual hint that can be implemented with simple CSS means. 
The visual hint could be only on hover/mouse over, so that it does not clutter the overall diagram. 
It should not be visible on the printed (exported) diagram, because on that it would be lie: you cannot drag boxes on a piece of paper.

(2) The user initiates the dragging by click-and-hold (and a mouse move). Look for a simple visual hint that dragging is active, what element is currently dragged, and in what area the dragging is valid basically.

Ideas: make wider gaps between the boxes, or show brightly colored thick lines in the gaps between boxes.

(3) When the user is over a place where he can drop the box, the system should give a visual hint: where will the box drop? How does this affect the other boxes.
Look for simple visual hint with a CSS implementation.

Note that the drag and drop needs to work on SVG, not on HTML elements.
If there is a stable library, use it in preference over a self-made solution.
But if the library is too complex or not mature, build it yourself."		New Feature	iteraplan PO	17/Sep/14 4:41 PM	29/Sep/14 10:32 AM														"18/Sep/14 9:39 AM;sepr;Est 1 PD

In scope of this story is expected to see variants of libraries or any solutions to implement drag and drop in SVG.
Story for real implementation will come later."	"19/Sep/14 6:08 PM;alvo;The existing solutions for d&d elements in SVG and angularjs application hasn't found.
The existing ones for HTML context cannot be implemented because the mechanism of positioning elements in SVG and HTML completely different. I've tried to use ngDraggable angularjs module but it can't work with SVG context.
It's possible to write new one using existing examples, I think it will take 4-6 days. Plus there is problem with our SVG diagram structure, all SVG elements are absolutely positioned, but have to dragged in scope (for example rectangle + icon + text), we have to link it together during dragging."																																																					
