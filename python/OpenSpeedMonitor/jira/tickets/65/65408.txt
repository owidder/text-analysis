Filter operators	"GOJS Diagrams:



* Each single filter should have a selectable operator, for example ""equals"" or ""contains"" or ""is greater than"".

* Available operators depend on property type and are to be defined.

* Depending on selected operator, the value selection might have to be changed:

for example ""equals"" for enum attributes should offer a dropdown of available values, while ""contains"" for enum attributes should offer free text entry.



To do:

* Change single filter structure to include a comparison operator and to create its predicate accordingly

* Change filter dialog UI to be able to select the operators

* Adjust display in legend

* Adjust URL encoding of the filter configuration



----

Detailed Specification



As-Is:

Core

* 3 JS classes: CombinedFilter, FilterPredicateBuilder, SingleFilterObject

* Combined Filter is facade and container, creates and has SingleFilterObjects

* FilterPredicateBuilder is private helper for SingleFilterObject. Only used locally in SingleFilterObject

* Note: the cases of a SinglePredicateFilter, that is by type of property value, eg. text, number (interval), date (interval),... could be split into different classes. On the other hand, the cases to split the value and to create a predicate function for that value (pairs) could be merged into that newly created classes. TO BE DISCUSSED.



Dialog and Builder:

* TODO



Legend:

* TODO



URL (location) encoding

* TODO





TODO

To-Be



Core



Dialog and Builder



Legend



URL (location) encoding





---

order for start the sub-tasks



1 and 2 at the beginning

after finishing 1 and 2  

3 could start

if 3 is finished 

4 and 5 could start

 "		New Feature	iteraplan PO	01/Dec/15 11:12 AM	15/Mar/16 9:50 AM														07/Jan/16 10:33 AM;sfe;Originally estimated: 5	"15/Mar/16 9:50 AM;sfe;All subtasks done.

Commits in this issue are only related to the creation of a branch for filter development."																																																					
