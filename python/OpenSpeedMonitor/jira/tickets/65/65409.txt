JSHint configuration	"A common JSHint configuration is one step towards a common JavaScript programming style.

"		Task	iteraplan PO	01/Dec/15 12:13 PM	12/Apr/16 4:18 PM														"11/Mar/16 3:51 PM;wfr;JSHint can be used as configured here.



Future additions or modifications may and should be done as part of a regular ticket,"	"14/Mar/16 12:00 PM;abo;* formatting

** blocks for different config-areas: enforcing, relaxing, environments

** alphabetic sorting inside blocks for faster querying

** remove commented lines

* config

** devel - ""poor-man's debugging"" - do we really want that?

** node - ""globals available when your code is running inside of the Node runtime"" - is it?

** camelcase - DEPRICATED, check out the JSCS project instead

** undef=true - prohibit the use of undeclared variables

** unused=vars - check only variables (not function params) if they are used.

** funscope=false - this is the default setting, but making it obvious that this switch is important

** shadow=inner/outer - 'true' = 'inner' is the default setting, but making it obvious that this switch is important

** ()set quotmark=true // ATTENTION: DEPRICATED)

* create jshint-report via grunt and publish it on Jenkins

For example:

	{code}

options: {

	reporter: 'checkstyle',

	reporterOutput: 'build/reports/jshint/report-jshint-checkstyle.xml'

}

{code}



(last point according to Jenkins is most likely a new ticket - just wanted to not forget it)"	"06/Apr/16 1:45 PM;wfr;call with ABo



items done or moved to follow-up ticket



How to use in daily work?



Many false positives

* function defined

** missing global

** defined in other JS source file



actions:

* whitelist for all constructor functions of all classes MOVE

* add in grunt a js hint report MOVE

* format the config file into 3 blocks, enforcing, relaxing, environment (predefined vars et al.) DONE 2 blocks, enforcing, relaxing and environment

* format sort alfa DO

* format: no commented lines DONE



* no devel debugging DONE

* no global var ""node"" DONE

* replace setting for deprecated camelcase, maybe leave it out DONE and MOVE

* unused vars _and_ params, both DONE: vars and params, but allow unused (optional) param followed by used param, exactly as intended

* funscope = false explicit plus comment DONE but only comment, no setting

* shadow: allow shadowing of outer vars, say reason DONE, implicit with comment

* quotmark: defer until using JSCS DONE and MOVE



questions:

* where to find all JS Hint messages in WS MOVE

"	08/Apr/16 12:49 PM;wfr;review issues done or moved to related ticket	12/Apr/16 1:19 PM;mwe;Die gleichen Regeln für jsHint in ESLint hinzugefügt. In ESLint kann man für jede Regel einzeln definieren, ob sie eine Warning oder einen Error auslösen soll.	"12/Apr/16 4:18 PM;mwe;Rules look good and have been tested.

Missing globals have to be added during the development process of iteraplan."	09/May/16 5:23 PM;mwe;Corrected strict rule for .eslintrc																																																
