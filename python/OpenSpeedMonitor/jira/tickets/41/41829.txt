[Refactoring] Umstellung CSI-Aggregation MeasuredValues	"Die Aggregation der Messdaten zu (CSI-)MeasuredValues soll umgestellt werden.



*Zur Zeit:*

HOURLY (MeasuredEvent)

* Berechnung mit jedem Messwert

*  Keine Erzeugung / Berechnung beim Aufruf von Dashboards. Hier werden nur Values zur Anzeige gelesen.



DAILY/WEEKLY (page/shop)

* Invalidierung mit jedem Messwert (Erzeugung Update Event mit MeasuredValueUpdateEvent.UpdateCause#OUTDATED)

* Erzeugung / Berechnung beim Aufruf von Dashboards (MeasuredValueUpdateEvent.UpdateCause#CALCULATED)

* Berechnung DAILY- und WEEKLY-Werte auf Grundlage von HOURLY-Werten 

* Nightly: Berechnung und Schließen existierender, zeitlich abgeschlossener, MeasuredValues.



*Zukünftig:*

* WEEKLY-MeasuredValues werden auf Basis der DAILY-Werte berechnet.

* Es erfolgt keine Invalidierung mehr.

* Beim Aufruf von Dashboards werden MeasuredValues nur noch gelesen, nicht mehr erzeugt oder berechnet.

* Es wird für die CSI-Gruppen ein boolean flag csiCalculation eingeführt.   

* Der nächtliche Mechanismus wird umgestellt: 

** Es werden MeasuredValues DAILY und WEEKLY für alle JobGroups mit {code}csiCalculation=true{code} berechnet für den gesamten Zeitraum, für den generell Daten vorgehalten werden sollen (bei OTTO derzeit 13 Monate).  

** Diese Berechnung muss gestaffelt erfolgen. Zuerst die DAILY-Werte, dann die WEEKLY-Werte. Dies kann darüber gelöst werden, dass nur die WEEKLY-Werte berechnet werden. Zur Berechnung dieser Wochenwerte werden dann alle zugrundeliegenden Tageswerte automatisch mit berechnet.

** Es müssen keine UpdateEvents mehr gelöscht werden. 

** Das Attribut closedAndCalculated der MeasuredValues wird nicht mehr benötigt, da ""offene"" Values nicht mehr persistiert werden.

* Aktuelle, noch nicht abgeschlossene Intervalle, werden beim Aufrufen von Dashboards nicht mehr persistiert. Abfrage dieser Intervalle sollte eine Ausnahme sein und wenn werden diese Werte on-the-fly berechnet und nicht persistiert. "		Story	OpenSpeedMonitor	26/May/15 11:11 AM															"16/Nov/15 3:51 PM;nku;* Nächtlicher Quartz-Job soll sich merken, wie weit er für jede JobGruppe gekommen war.

* Nächtliche Bearbeitung idealerweise asynchron in einem Thread der niedriger priorisiert ist als die Anwendung."																																																						
