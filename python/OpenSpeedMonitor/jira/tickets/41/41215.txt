REST-Methoden zum (de)aktivieren des nächtlichen cleanups implementieren	"Analog zu den REST-API-Methoden zum globalen Aktivieren und Deaktivieren der Messungen zu implementieren.



Könnten wir dann ebenfalls während der Jenkins-Deployments einsetzen."		New Feature	OpenSpeedMonitor	20/May/15 11:46 AM	12/Jan/16 3:49 PM														"12/Jan/16 11:23 AM;nku;Bitte noch mal testen:

Dein changelog erzeugt in der Tabelle api_key eine neue NOT NULLABLE Spalte ohne einen DB-seitigen default-value.

Der im static mapping-Block der domain-Klasse gesetzte default-Value erzeugt den default-Wert nur im neuen Objekt im RAM, nicht als Constraint in der DB. Das soll auch so bleiben, nur:



Wir brauchen zusätzlich einen sql-Changelog, der für alle bereits existierenden ApiKeys das neue Attribut mit dem Wert false belegt. Da dieser changelog das scheme nicht verändert gehört er unserer Konvention entsprechend in eine Datei next-release-DATA.groovy.

Bitte testen, ob das so funktioniert. Wenn es sync-Probleme gibt kann des sql changeset auch in die SCHEME-Datei. "	"12/Jan/16 2:19 PM;nku;Kannst Du bitte noch mal ...

1) den default-value in der domain-Klasse auf true setzen.

2) 

entweder

... das feld in der api_key-Tabelle manuell löschen und den angewendeten changelog wieder zurücksetzen (Tabelle DATABASECHANGELOG)

oder

... den Dump neu einspielen

3) die Anwendung neu starten.



-> Ich möchte gerne wissen, ob wir mit dem default-Value in der domain-Klasse wirklich steuern können, was in einem neuen NOT NULL-Feld landet für bestehende Einträge oder ob da irgendein mysql-Mechanismus greift.  "	"12/Jan/16 3:45 PM;bka;Ich habe verschiedene Dinge versucht:



a) Ich habe direkt in der MySQL-DB die Spalte 'allowed_for_nightly_database_cleanup_activation' gelöscht und von Hand wieder hinzugefügt. In der Spalte war kein Wert ('Null') eingetragen. Auf der detaillierten Ansicht eines API-Keys auf der OSM-GUI wurde auch kein Wert angezeigt, die Zeile für den Wert war leer.



b) Ich habe in der Domain-Class das mapping-Feld und die Variable 'allowed_for_nightly_database_cleanup_activation' auf TRUE gesetzt. Anschließend habe ich per 'dbm-update' Grails die SQL-Datenbank aktualisieren lassen. Sowohl direkt in der SQL-Tabelle als auch auf der OSM-Web-GUI war die Variable 'allowed_for_nightly_database_cleanup_activation' auf FALSE gesetzt!



Ich vermute also, dass nicht MySQL die Variable auf FALSE setzt, sondern Grails/GORM. Da ich das Verhalten aber nicht nachvollziehen kann und um mehr Kontrolle über die vorhandenen Daten zu haben, habe ich noch eine Migration erstellt, die die Variable für alle vorhandenen API-Keys auf FALSE setzt."																																																				
