Caching of LSD Context menu	"*Summary:*
Improve the performance of the landscape diagram context menu by caching the possible menu entries and *not* requesting them each time via REST.

*As-Is:*
The context menu of the landscape diagram (""lsdContextMenuProcessor"") requests each time data from the metadatamodel (by ""dataService.getTypeNameByFieldName(..)"").

*To-Be:*
All context menu entries are initally loaded and cached. For each opening of the context menu no REST-request is necessary.

*Implementation:*
Menu caching should be in the state of the controller
Optional: Preloading of Level 2 submenus could be an extra boost for performance?"		Improvement	iteraplan PO	27/May/15 8:36 AM	16/Jul/15 2:14 PM					cache	context	lsd							"22/Jun/15 3:51 PM;sfe;Separate context menu creation in two parts:
# metamodel dependent options, specifically which attributes/relations are available for filtering and coloring and relationship paths. (The content of the menu)
# ""the rest"", for example display of ""default coloring"" (which of the options are displayed?)

Calculate 2. every time you access the menu.
Calculate 1. only if the type configuration of the diagram changed, else use a cached menu.

In LSD, cache one context menu for each of content, x-axis and y-axis."	"29/Jun/15 11:25 AM;tam;The calculation is not the problem. It takes only some milliseconds: about 40-80ms for the testdata.



The problem is the displaying of the options."	30/Jun/15 10:20 AM;tam;Replacing recursive calls of the context menu gives just small but not significant improvement	"14/Jul/15 5:00 PM;msr;3 parts:



1) Context Menu Model Service: builds a view model dependant on region (needs metadata and config): 4 PT



2) Context Menu Coordiantion Service incl. connections/wiring of services: gives each right-click a region: 3 PT



3) Context Menu and subdirectives: 2 directives know each other: 6 PT"	"16/Jul/15 2:13 PM;sfe;Conclusion of this issue:

* The positive effect of the changes proposed in this issue is not noticable

* The changes necessary to achieve a significant improvement are not possible with the way the current context menu is structured

* Design for a reworked structure which offers better performance and flexibility was done by [~wfr] and [~tam]"	16/Jul/15 2:14 PM;sfe;Actual changes were not possible, but analysis was done for future proceedings.																																																	
