CRUD-Views für JobGroup-assoziierte Events	Events müssen über Oberflächen erzeugbar, editierbar, löschbar usw. sein.		New Feature	OpenSpeedMonitor	02/Mar/15 11:17 AM	05/May/15 3:31 PM														"20/Apr/15 11:23 AM;rkr;Die Anzeige der Events in Rickshaw arbeitet mit zwei Parametern pro Event:

 * Unix Timestamp, wie in den Daten zur Darstellung im Graph - Beispiel: 1414846610 für 2014-11-01T13:56:50+01:00

 * der Text-Nachricht, welche ausgegeben werden soll - Länge ist theoretisch unbegrenzt, aber nach ca. 17 Zeichen in einer Zeile (je nach Zeichenbreite) läuft die Zeile über die PopUp-Box (width: 160px) hinaus. Zeilenumbrüche sind mit simplen HTML möglich. Es ist offenbar möglich, den kompletten HTML-Satz zu verwenden. Bitte bei der Eingabe / Annahme der Text-Nachrichten sinnvoll einschränken auf Zeilenumbrüche und sinnvolle Text-Formatierungen (sowie weiteres HTML welches an der stelle sinnvoll brauchbar ist.)"	"20/Apr/15 3:39 PM;nku;Wir führen eine neue domain ein: 

de.iteratec.osm.report.chart.Event

Attribute:

* Date date

* String shortName

* String htmlDescription

* Boolean globallyVisible (default value = false)

* JobGroup jobGroup (1:n Beziehung zur JobGroup)



Die Beziehung zur JobGroup sollte nur vom Event aus navigierbar sein (unidirektional one-to-many)."	"20/Apr/15 4:51 PM;rkr;-Die Auswahl für date wird von grails per Default ohne Zeitauswahl dargestellt. --Lösungsmöglichkeiten:-

-a) eigene views anlegen und Eingaben für Uhrzeit hinzufügen-

-b) in allgemeinen Templates datepicker umkonfigurieren auf Auswahl mit Uhrzeit-

Ich habe eigene views angelegt.



-String läßt den gesamten HTML-Satz zu - ist das so in Ordnung? Folge derzeit: Bei fehlgeschlagener Validierung wird der gesamte String uncodiert als URL-Parameter an die Links in der locale-Auswahl angehängt und vom Browser ausgewertet. Lösungsmöglichkeiten:-

-a) passende Validierung mit Bordmitteln, bei welcher der String URL-codiert wird-

-b) manuelle HTML-Codierung vor oder in (regex) der Validierung-

Problem tritt nicht mehr auf seit Konvertierung des Datums vor dem Speichern.



-Die Auswahl für date paßt sich auf die locale an, aber die Validierung schlägt fehl wenn sie etwas anderes als de ist. Lösung: Passend umformatieren unmittelbar vor der Validierung.-

Umgesetzt: http://grails.1312388.n4.nabble.com/gui-datePicker-and-Date-Validation-td1387170.html"	21/Apr/15 4:20 PM;rkr;In der Event-Domain ist ein Bug drin, den ich bisher nicht behoben konnte. Bei locale=Englisch schlägt die Validierung des Datums fehl, auch wenn es mit einer beforeValidate-Funktion umkonvertiert wird oder wenn das englische Datenformat in der config.groovy mit grails.databinding.dateFormats zugelassen wird. Der Bug tritt aber nur nach Neustart (mit vorherigem clean) auf; wenn ich die Seite bearbeite, dann wird neu kompiliert und Updates des Event werden ausgeführt ABER der Datums-Eintrag wird, bei englischem Datumsformat, nicht gespeichert.	"28/Apr/15 2:20 PM;rhc;* HtmlDescription eingeschränkt durch Verwenden von markdown Plug-In (siehe: [link|https://bitbucket.org/tednaleid/grails-markdown])

** View der Klasse Event angepasst auf markdown-Plug-In



* Bug bei locale=Englisch behoben

** Nur das Format dd.MM.yyyy wird akzeptiert, Auswahl erfolgt über den Datepicker

** Bei locale=Englisch wird das Format in yyyy-MM-dd angegeben und nun im Controller in das dd.MM.yyyy Format umgewandelt

** vermutlich nicht optimal gelöst siehe: de.iteratec.osm.report.chart.EventController -> line: 52"	"04/May/15 12:01 PM;rkr;markdown ist kein Plugin um den Einsatz des vollen HTML-Satzes einzuschränken.

Konvertierung des Datumsformats erfolgt leider erst im Save. Save erfolgt aber immer erst nach der Validierung, dadurch erfolgt die Konvertierung zu spät.

TODO: Beides überarbeiten."																																																	
